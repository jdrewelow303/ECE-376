

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Wed Dec 07 21:29:06 2016

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4620
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	3
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	31
   109  000000                     main@i	equ	??_main+0
   110                           	global	main@i
   111  000000                     main@i_109	equ	??_main+2
   112                           	global	main@i_109
   113  000000                     main@i_110	equ	??_main+4
   114                           	global	main@i_110
   115  000000                     main@i_111	equ	??_main+6
   116                           	global	main@i_111
   117  000000                     main@i_112	equ	??_main+8
   118+                          	global	main@i_112
   119+ 000000                     main@i_113	equ	??_main+10
   120                           	global	main@i_113
   121  000000                     Score@playerSelect	equ	?_Score+0
   122                           	global	Score@playerSelect
   123  000000                     Start@i	equ	??_Start+0
   124                           	global	Start@i
   125  000000                     Start@i_106	equ	??_Start+2
   126                           	global	Start@i_106
   127  000000                     A2D_Read@i	equ	??_A2D_Read+0
   128                           	global	A2D_Read@i
   129  000000                     A2D_Read@c	equ	?_A2D_Read+0
   130                           	global	A2D_Read@c
   131  000000                     LCD_Out@i	equ	??_LCD_Out+0
   132                           	global	LCD_Out@i
   133  000000                     LCD_Out@A	equ	??_LCD_Out+1
   134                           	global	LCD_Out@A
   135  000000                     LCD_Out@DATA	equ	?_LCD_Out+0
   136                           	global	LCD_Out@DATA
   137  000000                     ___lwmod@counter	equ	??___lwmod+0
   138                           	global	___lwmod@counter
   139  000000                     ___lwmod@dividend	equ	?___lwmod+0
   140                           	global	___lwmod@dividend
   141  000000                     ___lwmod@divisor	equ	?___lwmod+2
   142                           	global	___lwmod@divisor
   143  000000                     ___lwdiv@counter	equ	??___lwdiv+0
   144                           	global	___lwdiv@counter
   145  000000                     ___lwdiv@quotient	equ	??___lwdiv+1
   146                           	global	___lwdiv@quotient
   147  000000                     ___lwdiv@dividend	equ	?___lwdiv+0
   148                           	global	___lwdiv@dividend
   149  000000                     ___lwdiv@divisor	equ	?___lwdiv+2
   150                           	global	___lwdiv@divisor
   151  000000                     abs@a	equ	?_abs+0
   152                           	global	abs@a
   153  000000                     LCD_Write@c	equ	?_LCD_Write+0
   154                           	global	LCD_Write@c
   155  000000                     LCD_Move@Row	equ	?_LCD_Move+0
   156                           	global	LCD_Move@Row
   157  000000                     LCD_Move@Col	equ	?_LCD_Move+1
   158                           	global	LCD_Move@Col
   159  000000                     LCD_Inst@c	equ	?_LCD_Inst+0
   160                           	global	LCD_Inst@c
   161  000000                     Wait_ms@i	equ	??_Wait_ms+0
   162                           	global	Wait_ms@i
   163  000000                     Wait_ms@j	equ	??_Wait_ms+2
   164                           	global	Wait_ms@j
   165  000000                     Wait_ms@X	equ	?_Wait_ms+0
   166                           	global	Wait_ms@X
   167  000000                     ___lmul@product	equ	??___lmul+0
   168                           	global	___lmul@product
   169  000000                     ___lmul@multiplier	equ	?___lmul+0
   170                           	global	___lmul@multiplier
   171  000000                     ___lmul@multiplicand	equ	?___lmul+4
   172                           	global	___lmul@multiplicand
   173  000000                     srand@x	equ	?_srand+0
   174                           	global	srand@x
   175  000000                     LCD_Pause@x	equ	??_LCD_Pause+0
   176                           	global	LCD_Pause@x
   177                           ;Data sizes: Strings 0, constant 112, data 2, bs
                                 s 0, persistent 0 stack 47
   178                           	global	_main
   179                           	global	??_main
   180                           	global	?_main
   181                                   psect   text0,class=CODE,space=0,reloc=2
   182                           
   183                           	opt lm
   184                           	file	"Main.c"
   185                           	line	122
   186  000000                     	__size_of_main	equ	__end_of_main-_main
   187                           ;Main.c: 122: void main(void) {
   188                           	
   189  001074                     _main:		; BSR set to: ?
   190                           
   191                           	opt stack 30
   192                           	line	123
   193                           ;Main.c: 123: TRISB = 0xFF;
   194  001074  6893               	setf	((c:3987)),c	;volatile
   195                           	line	124
   196                           ;Main.c: 124: TRISC = 0;
   197  001076  0E00               	movlw	low(0)
   198  001078  6E94               	movwf	((c:3988)),c	;volatile
   199                           	line	125
   200                           ;Main.c: 125: TRISD = 0;
   201  00107A  0E00               	movlw	low(0)
   202  00107C  6E95               	movwf	((c:3989)),c	;volatile
   203                           	line	126
   204                           ;Main.c: 126: PORTC = 0;
   205  00107E  0E00               	movlw	low(0)
   206  001080  6E82               	movwf	((c:3970)),c	;volatile
   207                           	line	129
   208                           ;Main.c: 129: TRISA = 0xFF;
   209  001082  6892               	setf	((c:3986)),c	;volatile
   210                           	line	130
   211                           ;Main.c: 130: TRISE = 0x0F;
   212  001084  0E0F               	movlw	low(0Fh)
   213  001086  6E96               	movwf	((c:3990)),c	;volatile
   214                           	line	131
   215                           ;Main.c: 131: ADCON2 = 0x85;
   216  001088  0101               	movlb	1	; () banked
   217  00108A  6F0C               	movwf	(??_main+12+0)&0ffh
   218  00108C  0E85               	movlw	low(085h)
   219  00108E  6EC0               	movwf	((c:4032)),c
   220  001090  0101               	movlb	1	; () banked
   221  001092  510C               	movf	(??_main+12+0)&0ffh,w
   222                           	line	132
   223                           ;Main.c: 132: ADCON1 = 0x07;
   224  001094  0101               	movlb	1	; () banked
   225  001096  6F0C               	movwf	(??_main+12+0)&0ffh
   226  001098  0E07               	movlw	low(07h)
   227  00109A  6EC1               	movwf	((c:4033)),c
   228  00109C  0101               	movlb	1	; () banked
   229  00109E  510C               	movf	(??_main+12+0)&0ffh,w
   230                           	line	133
   231                           ;Main.c: 133: ADCON0 = 0x01;
   232  0010A0  0E01               	movlw	low(01h)
   233  0010A2  6EC2               	movwf	((c:4034)),c	;volatile
   234                           	line	136
   235                           ;Main.c: 136: LCD_Init();
   236  0010A4  EC87  F00E         	call	_LCD_Init	;wreg free
   237                           	line	137
   238                           ;Main.c: 137: LCD_Move(0,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG2[i]);
   239  0010A8  0101               	movlb	1	; () banked
   240  0010AA  6F0C               	movwf	(??_main+12+0)&0ffh
   241  0010AC  0E00               	movlw	low(0)
   242  0010AE  0101               	movlb	1	; () banked
   243  0010B0  0101               	movlb	1	; () banked
   244  0010B2  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   245  0010B4  0101               	movlb	1	; () banked
   246  0010B6  510C               	movf	(??_main+12+0)&0ffh,w
   247  0010B8  0101               	movlb	1	; () banked
   248  0010BA  6F0D               	movwf	(??_main+13+0)&0ffh
   249  0010BC  0E00               	movlw	low(0)
   250  0010BE  0101               	movlb	1	; () banked
   251  0010C0  0101               	movlb	1	; () banked
   252  0010C2  6F14               	movwf	((?_LCD_Move))&0ffh
   253  0010C4  0101               	movlb	1	; () banked
   254  0010C6  510D               	movf	(??_main+13+0)&0ffh,w
   255  0010C8  EC45  F00E         	call	_LCD_Move	;wreg free
   256  0010CC  0E00               	movlw	low(0)
   257  0010CE  0101               	movlb	1	; () banked
   258  0010D0  0101               	movlb	1	; () banked
   259  0010D2  6F00               	movwf	((main@i))&0ffh
   260  0010D4  0E00               	movlw	high(0)
   261  0010D6  0101               	movlb	1	; () banked
   262  0010D8  6F01               	movwf	((main@i+1))&0ffh
   263  0010DA  0101               	movlb	1	; () banked
   264  0010DC  0101               	movlb	1	; () banked
   265  0010DE  5101               	movf	((main@i+1))&0ffh,w
   266  0010E0  0A80               	xorlw	80h
   267  0010E2  0F80               	addlw	-((0)^80h)
   268  0010E4  0E10               	movlw	010h
   269  0010E6  B4D8               	btfsc	status,2
   270  0010E8  5D00               	subwf	((main@i))&0ffh,w
   271  0010EA  A0D8               	btfss	status,0
   272  0010EC  D001               	goto	u2501
   273  0010EE  D001               	goto	u2500
   274  0010F0                     u2501:
   275  0010F0  D001               	goto	l169
   276  0010F2                     u2500:
   277  0010F2  D021               	goto	l170
   278                           	
   279  0010F4                     l169:		; BSR set to: ?
   280                           
   281  0010F4  0E21               	movlw	low((_MSG2))
   282  0010F6  0101               	movlb	1	; () banked
   283  0010F8  0101               	movlb	1	; () banked
   284  0010FA  2500               	addwf	((main@i))&0ffh,w
   285  0010FC  6EF6               	movwf	tblptrl
   286  0010FE  6AF7               	clrf	tblptrh
   287  001100  0E10               	movlw	high((_MSG2))
   288  001102  22F7               	addwfc	tblptrh
   289  001104  6AF8               	clrf	tblptru
   290  001106  0E00               	movlw	low highword(__mediumconst)
   291  001108  22F8               	addwfc	tblptru
   292  00110A  0008               	tblrd	*
   293                           	
   294  00110C  0101               	movlb	1	; () banked
   295  00110E  CFF5 F116          	movff	tablat,(?_LCD_Write)
   296  001112  EC65  F00F         	call	_LCD_Write	;wreg free
   297  001116  0101               	movlb	1	; () banked
   298  001118  0101               	movlb	1	; () banked
   299  00111A  4B00               	infsnz	((main@i))&0ffh
   300  00111C  2B01               	incf	((main@i+1))&0ffh
   301  00111E  0101               	movlb	1	; () banked
   302  001120  0101               	movlb	1	; () banked
   303  001122  5101               	movf	((main@i+1))&0ffh,w
   304  001124  0A80               	xorlw	80h
   305  001126  0F80               	addlw	-((0)^80h)
   306  001128  0E10               	movlw	010h
   307  00112A  B4D8               	btfsc	status,2
   308  00112C  5D00               	subwf	((main@i))&0ffh,w
   309  00112E  A0D8               	btfss	status,0
   310  001130  D001               	goto	u2511
   311  001132  D001               	goto	u2510
   312  001134                     u2511:
   313  001134  D7DF               	goto	l169
   314  001136                     u2510:
   315                           	
   316  001136                     l170:		; BSR set to: ?
   317                           
   318                           	line	138
   319                           ;Main.c: 138: LCD_Move(1,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG3[i]);
   320  001136  0101               	movlb	1	; () banked
   321  001138  6F0C               	movwf	(??_main+12+0)&0ffh
   322  00113A  0E00               	movlw	low(0)
   323  00113C  0101               	movlb	1	; () banked
   324  00113E  0101               	movlb	1	; () banked
   325  001140  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   326  001142  0101               	movlb	1	; () banked
   327  001144  510C               	movf	(??_main+12+0)&0ffh,w
   328  001146  0101               	movlb	1	; () banked
   329  001148  6F0D               	movwf	(??_main+13+0)&0ffh
   330  00114A  0E01               	movlw	low(01h)
   331  00114C  0101               	movlb	1	; () banked
   332  00114E  0101               	movlb	1	; () banked
   333  001150  6F14               	movwf	((?_LCD_Move))&0ffh
   334  001152  0101               	movlb	1	; () banked
   335  001154  510D               	movf	(??_main+13+0)&0ffh,w
   336  001156  EC45  F00E         	call	_LCD_Move	;wreg free
   337  00115A  0E00               	movlw	low(0)
   338  00115C  0101               	movlb	1	; () banked
   339  00115E  0101               	movlb	1	; () banked
   340  001160  6F02               	movwf	((main@i_109))&0ffh
   341  001162  0E00               	movlw	high(0)
   342  001164  0101               	movlb	1	; () banked
   343  001166  6F03               	movwf	((main@i_109+1))&0ffh
   344  001168  0101               	movlb	1	; () banked
   345  00116A  0101               	movlb	1	; () banked
   346  00116C  5103               	movf	((main@i_109+1))&0ffh,w
   347  00116E  0A80               	xorlw	80h
   348  001170  0F80               	addlw	-((0)^80h)
   349  001172  0E10               	movlw	010h
   350  001174  B4D8               	btfsc	status,2
   351  001176  5D02               	subwf	((main@i_109))&0ffh,w
   352  001178  A0D8               	btfss	status,0
   353  00117A  D001               	goto	u2521
   354  00117C  D001               	goto	u2520
   355  00117E                     u2521:
   356  00117E  D001               	goto	l172
   357  001180                     u2520:
   358  001180  D021               	goto	l173
   359                           	
   360  001182                     l172:		; BSR set to: ?
   361                           
   362  001182  0E31               	movlw	low((_MSG3))
   363  001184  0101               	movlb	1	; () banked
   364  001186  0101               	movlb	1	; () banked
   365  001188  2502               	addwf	((main@i_109))&0ffh,w
   366  00118A  6EF6               	movwf	tblptrl
   367  00118C  6AF7               	clrf	tblptrh
   368  00118E  0E10               	movlw	high((_MSG3))
   369  001190  22F7               	addwfc	tblptrh
   370  001192  6AF8               	clrf	tblptru
   371  001194  0E00               	movlw	low highword(__mediumconst)
   372  001196  22F8               	addwfc	tblptru
   373  001198  0008               	tblrd	*
   374                           	
   375  00119A  0101               	movlb	1	; () banked
   376  00119C  CFF5 F116          	movff	tablat,(?_LCD_Write)
   377  0011A0  EC65  F00F         	call	_LCD_Write	;wreg free
   378  0011A4  0101               	movlb	1	; () banked
   379  0011A6  0101               	movlb	1	; () banked
   380  0011A8  4B02               	infsnz	((main@i_109))&0ffh
   381  0011AA  2B03               	incf	((main@i_109+1))&0ffh
   382  0011AC  0101               	movlb	1	; () banked
   383  0011AE  0101               	movlb	1	; () banked
   384  0011B0  5103               	movf	((main@i_109+1))&0ffh,w
   385  0011B2  0A80               	xorlw	80h
   386  0011B4  0F80               	addlw	-((0)^80h)
   387  0011B6  0E10               	movlw	010h
   388  0011B8  B4D8               	btfsc	status,2
   389  0011BA  5D02               	subwf	((main@i_109))&0ffh,w
   390  0011BC  A0D8               	btfss	status,0
   391  0011BE  D001               	goto	u2531
   392  0011C0  D001               	goto	u2530
   393  0011C2                     u2531:
   394  0011C2  D7DF               	goto	l172
   395  0011C4                     u2530:
   396                           	
   397  0011C4                     l173:		; BSR set to: ?
   398                           
   399                           	line	141
   400                           ;Main.c: 141: while(!RB4)
   401  0011C4  D000               	goto	l175
   402                           	line	143
   403                           ;Main.c: 142: {
   404                           	
   405  0011C6                     l175:		; BSR set to: ?
   406                           
   407                           	line	141
   408  0011C6  A881               	btfss	c:(31756/8),(31756)&7	;volatile
   409  0011C8  D001               	goto	u2541
   410  0011CA  D001               	goto	u2540
   411  0011CC                     u2541:
   412  0011CC  D7FC               	goto	l175
   413  0011CE                     u2540:
   414                           	
   415  0011CE                     l177:		; BSR set to: ?
   416                           
   417                           	line	148
   418                           ;Main.c: 143: }
   419                           ;Main.c: 148: T0CS = 0;
   420  0011CE  9AD5               	bcf	c:(32429/8),(32429)&7
   421                           	line	149
   422                           ;Main.c: 149: T0CON = 0x88;
   423  0011D0  0101               	movlb	1	; () banked
   424  0011D2  6F0C               	movwf	(??_main+12+0)&0ffh
   425  0011D4  0E88               	movlw	low(088h)
   426  0011D6  6ED5               	movwf	((c:4053)),c
   427  0011D8  0101               	movlb	1	; () banked
   428  0011DA  510C               	movf	(??_main+12+0)&0ffh,w
   429                           	line	150
   430                           ;Main.c: 150: TMR0ON = 1;
   431  0011DC  8ED5               	bsf	c:(32431/8),(32431)&7
   432                           	line	151
   433                           ;Main.c: 151: TMR0IE = 1;
   434  0011DE  8AF2               	bsf	c:(32661/8),(32661)&7
   435                           	line	152
   436                           ;Main.c: 152: TMR0IP = 1;
   437  0011E0  84F1               	bsf	c:(32650/8),(32650)&7
   438                           	line	153
   439                           ;Main.c: 153: PEIE = 1;
   440  0011E2  8CF2               	bsf	c:(32662/8),(32662)&7
   441                           	line	163
   442                           ;Main.c: 163: GIE = 1;
   443  0011E4  8EF2               	bsf	c:(32663/8),(32663)&7
   444                           	line	166
   445                           ;Main.c: 166: srand(A2D_Read(0));
   446  0011E6  0101               	movlb	1	; () banked
   447  0011E8  6F0C               	movwf	(??_main+12+0)&0ffh
   448  0011EA  0E00               	movlw	low(0)
   449  0011EC  0101               	movlb	1	; () banked
   450  0011EE  0101               	movlb	1	; () banked
   451  0011F0  6F0E               	movwf	((?_A2D_Read))&0ffh
   452  0011F2  0101               	movlb	1	; () banked
   453  0011F4  510C               	movf	(??_main+12+0)&0ffh,w
   454  0011F6  EC06  F00F         	call	_A2D_Read	;wreg free
   455  0011FA  C10E  F116         	movff	0+?_A2D_Read,(?_srand)
   456  0011FE  C10F  F117         	movff	1+?_A2D_Read,(?_srand+1)
   457  001202  ECD0  F00F         	call	_srand	;wreg free
   458                           	line	167
   459                           ;Main.c: 167: Start();
   460  001206  EC84  F00B         	call	_Start	;wreg free
   461                           	line	169
   462                           ;Main.c: 169: while(1)
   463                           	
   464  00120A                     l179:		; BSR set to: ?
   465                           
   466                           	line	172
   467                           ;Main.c: 170: {
   468                           ;Main.c: 172: LCD_Move(0, 10); LCD_Out(score1);
   469  00120A  0101               	movlb	1	; () banked
   470+ 00120C  6F0C               	movwf	(??_main+12+0)&0ffh
   471+ 00120E  0E0A               	movlw	low(0Ah)
   472  001210  0101               	movlb	1	; () banked
   473  001212  0101               	movlb	1	; () banked
   474  001214  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   475  001216  0101               	movlb	1	; () banked
   476  001218  510C               	movf	(??_main+12+0)&0ffh,w
   477  00121A  0101               	movlb	1	; () banked
   478  00121C  6F0D               	movwf	(??_main+13+0)&0ffh
   479  00121E  0E00               	movlw	low(0)
   480  001220  0101               	movlb	1	; () banked
   481  001222  0101               	movlb	1	; () banked
   482  001224  6F14               	movwf	((?_LCD_Move))&0ffh
   483  001226  0101               	movlb	1	; () banked
   484  001228  510D               	movf	(??_main+13+0)&0ffh,w
   485  00122A  EC45  F00E         	call	_LCD_Move	;wreg free
   486  00122E  C00B F10E          	movff	(c:11),(?_LCD_Out)
   487  001232  C00C F10F          	movff	(c:11+1),(?_LCD_Out+1)
   488  001236  EC21  F00C         	call	_LCD_Out	;wreg free
   489                           	line	173
   490                           ;Main.c: 173: LCD_Move(1, 10); LCD_Out(score2);
   491  00123A  0101               	movlb	1	; () banked
   492  00123C  6F0C               	movwf	(??_main+12+0)&0ffh
   493  00123E  0E0A               	movlw	low(0Ah)
   494  001240  0101               	movlb	1	; () banked
   495  001242  0101               	movlb	1	; () banked
   496  001244  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   497  001246  0101               	movlb	1	; () banked
   498  001248  510C               	movf	(??_main+12+0)&0ffh,w
   499  00124A  0101               	movlb	1	; () banked
   500  00124C  6F0D               	movwf	(??_main+13+0)&0ffh
   501  00124E  0E01               	movlw	low(01h)
   502  001250  0101               	movlb	1	; () banked
   503  001252  0101               	movlb	1	; () banked
   504  001254  6F14               	movwf	((?_LCD_Move))&0ffh
   505  001256  0101               	movlb	1	; () banked
   506  001258  510D               	movf	(??_main+13+0)&0ffh,w
   507  00125A  EC45  F00E         	call	_LCD_Move	;wreg free
   508  00125E  C009 F10E          	movff	(c:9),(?_LCD_Out)
   509  001262  C00A F10F          	movff	(c:9+1),(?_LCD_Out+1)
   510  001266  EC21  F00C         	call	_LCD_Out	;wreg free
   511                           	line	174
   512                           ;Main.c: 174: Wait_ms(1000);
   513  00126A  0EE8               	movlw	low(03E8h)
   514  00126C  0101               	movlb	1	; () banked
   515  00126E  0101               	movlb	1	; () banked
   516  001270  6F18               	movwf	((?_Wait_ms))&0ffh
   517  001272  0E03               	movlw	high(03E8h)
   518  001274  0101               	movlb	1	; () banked
   519  001276  6F19               	movwf	((?_Wait_ms+1))&0ffh
   520  001278  ECC7  F00E         	call	_Wait_ms	;wreg free
   521                           	line	176
   522                           ;Main.c: 176: while(P1in + P2in != 2){
   523  00127C  D046               	goto	l181
   524                           	
   525  00127E                     l182:		; BSR set to: ?
   526                           
   527                           	line	177
   528                           ;Main.c: 177: if(RB0)
   529  00127E  A081               	btfss	c:(31752/8),(31752)&7	;volatile
   530  001280  D001               	goto	u2551
   531  001282  D001               	goto	u2550
   532  001284                     u2551:
   533  001284  D00D               	goto	l184
   534  001286                     u2550:
   535                           	line	179
   536                           ;Main.c: 178: {
   537                           ;Main.c: 179: P1in = 1;
   538  001286  0E01               	movlw	low(01h)
   539  001288  6E1D               	movwf	((c:29)),c
   540  00128A  0E00               	movlw	high(01h)
   541  00128C  6E1E               	movwf	((c:29+1)),c
   542                           	line	180
   543                           ;Main.c: 180: Score(1);
   544  00128E  0E01               	movlw	low(01h)
   545  001290  0101               	movlb	1	; () banked
   546  001292  0101               	movlb	1	; () banked
   547  001294  6F0E               	movwf	((?_Score))&0ffh
   548  001296  0E00               	movlw	high(01h)
   549  001298  0101               	movlb	1	; () banked
   550  00129A  6F0F               	movwf	((?_Score+1))&0ffh
   551  00129C  ECDF  F00A         	call	_Score	;wreg free
   552                           	line	181
   553                           	
   554  0012A0                     l184:		; BSR set to: ?
   555                           
   556                           	line	182
   557                           ;Main.c: 181: }
   558                           ;Main.c: 182: if(RB7)
   559  0012A0  AE81               	btfss	c:(31759/8),(31759)&7	;volatile
   560  0012A2  D001               	goto	u2561
   561  0012A4  D001               	goto	u2560
   562  0012A6                     u2561:
   563  0012A6  D00D               	goto	l185
   564  0012A8                     u2560:
   565                           	line	184
   566                           ;Main.c: 183: {
   567                           ;Main.c: 184: P2in = 1;
   568  0012A8  0E01               	movlw	low(01h)
   569  0012AA  6E1B               	movwf	((c:27)),c
   570  0012AC  0E00               	movlw	high(01h)
   571  0012AE  6E1C               	movwf	((c:27+1)),c
   572                           	line	185
   573                           ;Main.c: 185: Score(2);
   574  0012B0  0E02               	movlw	low(02h)
   575  0012B2  0101               	movlb	1	; () banked
   576  0012B4  0101               	movlb	1	; () banked
   577  0012B6  6F0E               	movwf	((?_Score))&0ffh
   578  0012B8  0E00               	movlw	high(02h)
   579  0012BA  0101               	movlb	1	; () banked
   580  0012BC  6F0F               	movwf	((?_Score+1))&0ffh
   581  0012BE  ECDF  F00A         	call	_Score	;wreg free
   582                           	line	186
   583                           	
   584  0012C2                     l185:		; BSR set to: ?
   585                           
   586                           	line	187
   587                           ;Main.c: 186: }
   588                           ;Main.c: 187: if(foul == 1 && !P1in)
   589  0012C2  0400               	decf	((c:0)),c,w
   590  0012C4  1001               	iorwf ((c:0+1)),c,w
   591                           
   592  0012C6  A4D8               	btfss	status,2
   593  0012C8  D001               	goto	u2571
   594  0012CA  D001               	goto	u2570
   595  0012CC                     u2571:
   596  0012CC  D00C               	goto	l186
   597  0012CE                     u2570:
   598  0012CE  501E               	movf	((c:29+1)),c,w
   599  0012D0  101D               	iorwf ((c:29)),c,w
   600                           
   601  0012D2  A4D8               	btfss	status,2
   602  0012D4  D001               	goto	u2581
   603  0012D6  D001               	goto	u2580
   604  0012D8                     u2581:
   605  0012D8  D006               	goto	l186
   606  0012DA                     u2580:
   607                           	line	189
   608                           ;Main.c: 188: {
   609                           ;Main.c: 189: score1 = score1 + 765;
   610  0012DA  0EFD               	movlw	low(02FDh)
   611  0012DC  240B               	addwf	((c:11)),c,w
   612                           	
   613  0012DE  6E0B               	movwf	((c:11)),c
   614  0012E0  0E02               	movlw	high(02FDh)
   615  0012E2  200C               	addwfc	((c:11+1)),c,w
   616  0012E4  6E0C               	movwf	1+((c:11)),c
   617                           	line	190
   618                           	
   619  0012E6                     l186:		; BSR set to: ?
   620                           
   621                           	line	191
   622                           ;Main.c: 190: }
   623                           ;Main.c: 191: if(foul == 1 && !P2in)
   624  0012E6  0400               	decf	((c:0)),c,w
   625  0012E8  1001               	iorwf ((c:0+1)),c,w
   626                           
   627  0012EA  A4D8               	btfss	status,2
   628  0012EC  D001               	goto	u2591
   629  0012EE  D001               	goto	u2590
   630  0012F0                     u2591:
   631  0012F0  D00C               	goto	l181
   632  0012F2                     u2590:
   633  0012F2  501C               	movf	((c:27+1)),c,w
   634  0012F4  101B               	iorwf ((c:27)),c,w
   635                           
   636  0012F6  A4D8               	btfss	status,2
   637  0012F8  D001               	goto	u2601
   638  0012FA  D001               	goto	u2600
   639  0012FC                     u2601:
   640  0012FC  D006               	goto	l181
   641  0012FE                     u2600:
   642                           	line	193
   643                           ;Main.c: 192: {
   644                           ;Main.c: 193: score2 = score2 + 765;
   645  0012FE  0EFD               	movlw	low(02FDh)
   646  001300  2409               	addwf	((c:9)),c,w
   647                           	
   648  001302  6E09               	movwf	((c:9)),c
   649  001304  0E02               	movlw	high(02FDh)
   650  001306  200A               	addwfc	((c:9+1)),c,w
   651  001308  6E0A               	movwf	1+((c:9)),c
   652                           	line	194
   653                           	
   654  00130A                     l187:		; BSR set to: ?
   655                           
   656                           	line	197
   657                           	
   658  00130A                     l181:		; BSR set to: ?
   659                           
   660                           	line	176
   661  00130A  C01D F10C          	movff	(c:29),??_main+12+0
   662  00130E  C01E F10D          	movff	(c:29+1),??_main+12+0+1
   663  001312  501B               	movf	((c:27)),c,w
   664  001314  0101               	movlb	1	; () banked
   665  001316  270C               	addwf	(??_main+12+0)&0ffh
   666  001318  501C               	movf	((c:27+1)),c,w
   667  00131A  0101               	movlb	1	; () banked
   668  00131C  230D               	addwfc	(??_main+12+1)&0ffh
   669  00131E  0101               	movlb	1	; () banked
   670  001320  510C               	movf	(??_main+12+0)&0ffh,w
   671  001322  0A02               	xorlw	2
   672  001324  110D               	iorwf (??_main+12+1)&0ffh,w
   673                           
   674  001326  A4D8               	btfss	status,2
   675  001328  D001               	goto	u2611
   676  00132A  D001               	goto	u2610
   677  00132C                     u2611:
   678  00132C  D7A8               	goto	l182
   679  00132E                     u2610:
   680                           	
   681  00132E                     l183:		; BSR set to: ?
   682                           
   683                           	line	198
   684                           ;Main.c: 194: }
   685                           ;Main.c: 197: }
   686                           ;Main.c: 198: P1in = 0;
   687  00132E  0E00               	movlw	low(0)
   688  001330  6E1D               	movwf	((c:29)),c
   689  001332  0E00               	movlw	high(0)
   690  001334  6E1E               	movwf	((c:29+1)),c
   691                           	line	199
   692                           ;Main.c: 199: P2in = 0;
   693  001336  0E00               	movlw	low(0)
   694  001338  6E1B               	movwf	((c:27)),c
   695  00133A  0E00               	movlw	high(0)
   696  00133C  6E1C               	movwf	((c:27+1)),c
   697                           	line	200
   698                           ;Main.c: 200: roundNum++;
   699  00133E  4A06               	infsnz	((c:6)),c
   700  001340  2A07               	incf	((c:6+1)),c
   701                           	line	202
   702                           ;Main.c: 202: while(roundNum == 3)
   703  001342  D133               	goto	l188
   704                           	
   705  001344                     l189:		; BSR set to: ?
   706                           
   707                           	line	204
   708                           ;Main.c: 203: {
   709                           ;Main.c: 204: while(!RB4){
   710  001344  D12C               	goto	l191
   711                           	
   712  001346                     l192:		; BSR set to: ?
   713                           
   714                           	line	206
   715                           ;Main.c: 206: if(score1 < score2)
   716  001346  5009               	movf	((c:9)),c,w
   717  001348  5C0B               	subwf	((c:11)),c,w
   718  00134A  500A               	movf	((c:9+1)),c,w
   719  00134C  580C               	subwfb	((c:11+1)),c,w
   720  00134E  B0D8               	btfsc	status,0
   721  001350  D001               	goto	u2621
   722  001352  D001               	goto	u2620
   723  001354                     u2621:
   724  001354  D08E               	goto	l194
   725  001356                     u2620:
   726                           	line	208
   727                           ;Main.c: 207: {
   728                           ;Main.c: 208: LCD_Move(0,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG4[i]);
   729  001356  0101               	movlb	1	; () banked
   730  001358  6F0C               	movwf	(??_main+12+0)&0ffh
   731  00135A  0E00               	movlw	low(0)
   732  00135C  0101               	movlb	1	; () banked
   733  00135E  0101               	movlb	1	; () banked
   734  001360  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   735  001362  0101               	movlb	1	; () banked
   736  001364  510C               	movf	(??_main+12+0)&0ffh,w
   737  001366  0101               	movlb	1	; () banked
   738  001368  6F0D               	movwf	(??_main+13+0)&0ffh
   739  00136A  0E00               	movlw	low(0)
   740  00136C  0101               	movlb	1	; () banked
   741  00136E  0101               	movlb	1	; () banked
   742  001370  6F14               	movwf	((?_LCD_Move))&0ffh
   743  001372  0101               	movlb	1	; () banked
   744  001374  510D               	movf	(??_main+13+0)&0ffh,w
   745  001376  EC45  F00E         	call	_LCD_Move	;wreg free
   746  00137A  0E00               	movlw	low(0)
   747  00137C  0101               	movlb	1	; () banked
   748  00137E  0101               	movlb	1	; () banked
   749  001380  6F04               	movwf	((main@i_110))&0ffh
   750  001382  0E00               	movlw	high(0)
   751  001384  0101               	movlb	1	; () banked
   752  001386  6F05               	movwf	((main@i_110+1))&0ffh
   753  001388  0101               	movlb	1	; () banked
   754  00138A  0101               	movlb	1	; () banked
   755  00138C  5105               	movf	((main@i_110+1))&0ffh,w
   756  00138E  0A80               	xorlw	80h
   757  001390  0F80               	addlw	-((0)^80h)
   758  001392  0E10               	movlw	010h
   759  001394  B4D8               	btfsc	status,2
   760  001396  5D04               	subwf	((main@i_110))&0ffh,w
   761  001398  A0D8               	btfss	status,0
   762  00139A  D001               	goto	u2631
   763  00139C  D001               	goto	u2630
   764  00139E                     u2631:
   765  00139E  D001               	goto	l195
   766  0013A0                     u2630:
   767  0013A0  D021               	goto	l196
   768                           	
   769  0013A2                     l195:		; BSR set to: ?
   770                           
   771  0013A2  0E41               	movlw	low((_MSG4))
   772  0013A4  0101               	movlb	1	; () banked
   773  0013A6  0101               	movlb	1	; () banked
   774  0013A8  2504               	addwf	((main@i_110))&0ffh,w
   775  0013AA  6EF6               	movwf	tblptrl
   776  0013AC  6AF7               	clrf	tblptrh
   777  0013AE  0E10               	movlw	high((_MSG4))
   778  0013B0  22F7               	addwfc	tblptrh
   779  0013B2  6AF8               	clrf	tblptru
   780  0013B4  0E00               	movlw	low highword(__mediumconst)
   781  0013B6  22F8               	addwfc	tblptru
   782  0013B8  0008               	tblrd	*
   783                           	
   784  0013BA  0101               	movlb	1	; () banked
   785  0013BC  CFF5 F116          	movff	tablat,(?_LCD_Write)
   786  0013C0  EC65  F00F         	call	_LCD_Write	;wreg free
   787  0013C4  0101               	movlb	1	; () banked
   788  0013C6  0101               	movlb	1	; () banked
   789  0013C8  4B04               	infsnz	((main@i_110))&0ffh
   790  0013CA  2B05               	incf	((main@i_110+1))&0ffh
   791  0013CC  0101               	movlb	1	; () banked
   792  0013CE  0101               	movlb	1	; () banked
   793  0013D0  5105               	movf	((main@i_110+1))&0ffh,w
   794  0013D2  0A80               	xorlw	80h
   795  0013D4  0F80               	addlw	-((0)^80h)
   796  0013D6  0E10               	movlw	010h
   797  0013D8  B4D8               	btfsc	status,2
   798  0013DA  5D04               	subwf	((main@i_110))&0ffh,w
   799  0013DC  A0D8               	btfss	status,0
   800  0013DE  D001               	goto	u2641
   801  0013E0  D001               	goto	u2640
   802  0013E2                     u2641:
   803  0013E2  D7DF               	goto	l195
   804  0013E4                     u2640:
   805                           	
   806  0013E4                     l196:		; BSR set to: ?
   807                           
   808                           	line	209
   809                           ;Main.c: 209: LCD_Move(1,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG6[i]);
   810  0013E4  0101               	movlb	1	; () banked
   811  0013E6  6F0C               	movwf	(??_main+12+0)&0ffh
   812  0013E8  0E00               	movlw	low(0)
   813  0013EA  0101               	movlb	1	; () banked
   814  0013EC  0101               	movlb	1	; () banked
   815  0013EE  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   816  0013F0  0101               	movlb	1	; () banked
   817  0013F2  510C               	movf	(??_main+12+0)&0ffh,w
   818  0013F4  0101               	movlb	1	; () banked
   819  0013F6  6F0D               	movwf	(??_main+13+0)&0ffh
   820  0013F8  0E01               	movlw	low(01h)
   821  0013FA  0101               	movlb	1	; () banked
   822  0013FC  0101               	movlb	1	; () banked
   823  0013FE  6F14               	movwf	((?_LCD_Move))&0ffh
   824  001400  0101               	movlb	1	; () banked
   825  001402  510D               	movf	(??_main+13+0)&0ffh,w
   826  001404  EC45  F00E         	call	_LCD_Move	;wreg free
   827  001408  0E00               	movlw	low(0)
   828  00140A  0101               	movlb	1	; () banked
   829  00140C  0101               	movlb	1	; () banked
   830  00140E  6F06               	movwf	((main@i_111))&0ffh
   831  001410  0E00               	movlw	high(0)
   832  001412  0101               	movlb	1	; () banked
   833  001414  6F07               	movwf	((main@i_111+1))&0ffh
   834  001416  0101               	movlb	1	; () banked
   835  001418  0101               	movlb	1	; () banked
   836  00141A  5107               	movf	((main@i_111+1))&0ffh,w
   837  00141C  0A80               	xorlw	80h
   838  00141E  0F80               	addlw	-((0)^80h)
   839  001420  0E10               	movlw	010h
   840  001422  B4D8               	btfsc	status,2
   841  001424  5D06               	subwf	((main@i_111))&0ffh,w
   842  001426  A0D8               	btfss	status,0
   843  001428  D001               	goto	u2651
   844  00142A  D001               	goto	u2650
   845  00142C                     u2651:
   846  00142C  D001               	goto	l198
   847  00142E                     u2650:
   848  00142E  D021               	goto	l194
   849                           	
   850  001430                     l198:		; BSR set to: ?
   851                           
   852  001430  0E61               	movlw	low((_MSG6))
   853  001432  0101               	movlb	1	; () banked
   854  001434  0101               	movlb	1	; () banked
   855  001436  2506               	addwf	((main@i_111))&0ffh,w
   856  001438  6EF6               	movwf	tblptrl
   857  00143A  6AF7               	clrf	tblptrh
   858  00143C  0E10               	movlw	high((_MSG6))
   859  00143E  22F7               	addwfc	tblptrh
   860  001440  6AF8               	clrf	tblptru
   861  001442  0E00               	movlw	low highword(__mediumconst)
   862  001444  22F8               	addwfc	tblptru
   863  001446  0008               	tblrd	*
   864                           	
   865  001448  0101               	movlb	1	; () banked
   866  00144A  CFF5 F116          	movff	tablat,(?_LCD_Write)
   867  00144E  EC65  F00F         	call	_LCD_Write	;wreg free
   868  001452  0101               	movlb	1	; () banked
   869  001454  0101               	movlb	1	; () banked
   870  001456  4B06               	infsnz	((main@i_111))&0ffh
   871  001458  2B07               	incf	((main@i_111+1))&0ffh
   872  00145A  0101               	movlb	1	; () banked
   873  00145C  0101               	movlb	1	; () banked
   874  00145E  5107               	movf	((main@i_111+1))&0ffh,w
   875  001460  0A80               	xorlw	80h
   876  001462  0F80               	addlw	-((0)^80h)
   877  001464  0E10               	movlw	010h
   878  001466  B4D8               	btfsc	status,2
   879  001468  5D06               	subwf	((main@i_111))&0ffh,w
   880  00146A  A0D8               	btfss	status,0
   881  00146C  D001               	goto	u2661
   882  00146E  D001               	goto	u2660
   883  001470                     u2661:
   884  001470  D7DF               	goto	l198
   885  001472                     u2660:
   886                           	
   887  001472                     l199:		; BSR set to: ?
   888                           
   889                           	line	210
   890                           	
   891  001472                     l194:		; BSR set to: ?
   892                           
   893                           	line	211
   894                           ;Main.c: 210: }
   895                           ;Main.c: 211: if(score2 < score1)
   896  001472  500B               	movf	((c:11)),c,w
   897  001474  5C09               	subwf	((c:9)),c,w
   898  001476  500C               	movf	((c:11+1)),c,w
   899  001478  580A               	subwfb	((c:9+1)),c,w
   900  00147A  B0D8               	btfsc	status,0
   901  00147C  D001               	goto	u2671
   902  00147E  D001               	goto	u2670
   903  001480                     u2671:
   904  001480  D08E               	goto	l191
   905  001482                     u2670:
   906                           	line	213
   907                           ;Main.c: 212: {
   908                           ;Main.c: 213: LCD_Move(0,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG5[i]);
   909  001482  0101               	movlb	1	; () banked
   910  001484  6F0C               	movwf	(??_main+12+0)&0ffh
   911  001486  0E00               	movlw	low(0)
   912  001488  0101               	movlb	1	; () banked
   913  00148A  0101               	movlb	1	; () banked
   914  00148C  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   915  00148E  0101               	movlb	1	; () banked
   916  001490  510C               	movf	(??_main+12+0)&0ffh,w
   917  001492  0101               	movlb	1	; () banked
   918  001494  6F0D               	movwf	(??_main+13+0)&0ffh
   919  001496  0E00               	movlw	low(0)
   920  001498  0101               	movlb	1	; () banked
   921  00149A  0101               	movlb	1	; () banked
   922  00149C  6F14               	movwf	((?_LCD_Move))&0ffh
   923  00149E  0101               	movlb	1	; () banked
   924  0014A0  510D               	movf	(??_main+13+0)&0ffh,w
   925  0014A2  EC45  F00E         	call	_LCD_Move	;wreg free
   926  0014A6  0E00               	movlw	low(0)
   927  0014A8  0101               	movlb	1	; () banked
   928  0014AA  0101               	movlb	1	; () banked
   929  0014AC  6F08               	movwf	((main@i_112))&0ffh
   930  0014AE  0E00               	movlw	high(0)
   931  0014B0  0101               	movlb	1	; () banked
   932  0014B2  6F09               	movwf	((main@i_112+1))&0ffh
   933  0014B4  0101               	movlb	1	; () banked
   934  0014B6  0101               	movlb	1	; () banked
   935  0014B8  5109               	movf	((main@i_112+1))&0ffh,w
   936  0014BA  0A80               	xorlw	80h
   937  0014BC  0F80               	addlw	-((0)^80h)
   938  0014BE  0E10               	movlw	010h
   939  0014C0  B4D8               	btfsc	status,2
   940  0014C2  5D08               	subwf	((main@i_112))&0ffh,w
   941  0014C4  A0D8               	btfss	status,0
   942  0014C6  D001               	goto	u2681
   943  0014C8  D001               	goto	u2680
   944  0014CA                     u2681:
   945  0014CA  D001               	goto	l202
   946  0014CC                     u2680:
   947  0014CC  D021               	goto	l203
   948                           	
   949  0014CE                     l202:		; BSR set to: ?
   950                           
   951  0014CE  0E51               	movlw	low((_MSG5))
   952  0014D0  0101               	movlb	1	; () banked
   953  0014D2  0101               	movlb	1	; () banked
   954  0014D4  2508               	addwf	((main@i_112))&0ffh,w
   955  0014D6  6EF6               	movwf	tblptrl
   956  0014D8  6AF7               	clrf	tblptrh
   957  0014DA  0E10               	movlw	high((_MSG5))
   958  0014DC  22F7               	addwfc	tblptrh
   959  0014DE  6AF8               	clrf	tblptru
   960  0014E0  0E00               	movlw	low highword(__mediumconst)
   961  0014E2  22F8               	addwfc	tblptru
   962  0014E4  0008               	tblrd	*
   963                           	
   964  0014E6  0101               	movlb	1	; () banked
   965  0014E8  CFF5 F116          	movff	tablat,(?_LCD_Write)
   966  0014EC  EC65  F00F         	call	_LCD_Write	;wreg free
   967  0014F0  0101               	movlb	1	; () banked
   968  0014F2  0101               	movlb	1	; () banked
   969  0014F4  4B08               	infsnz	((main@i_112))&0ffh
   970  0014F6  2B09               	incf	((main@i_112+1))&0ffh
   971  0014F8  0101               	movlb	1	; () banked
   972  0014FA  0101               	movlb	1	; () banked
   973  0014FC  5109               	movf	((main@i_112+1))&0ffh,w
   974  0014FE  0A80               	xorlw	80h
   975  001500  0F80               	addlw	-((0)^80h)
   976  001502  0E10               	movlw	010h
   977  001504  B4D8               	btfsc	status,2
   978  001506  5D08               	subwf	((main@i_112))&0ffh,w
   979  001508  A0D8               	btfss	status,0
   980  00150A  D001               	goto	u2691
   981  00150C  D001               	goto	u2690
   982  00150E                     u2691:
   983  00150E  D7DF               	goto	l202
   984  001510                     u2690:
   985                           	
   986  001510                     l203:		; BSR set to: ?
   987                           
   988                           	line	214
   989                           ;Main.c: 214: LCD_Move(1,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG6[i]);
   990  001510  0101               	movlb	1	; () banked
   991  001512  6F0C               	movwf	(??_main+12+0)&0ffh
   992  001514  0E00               	movlw	low(0)
   993  001516  0101               	movlb	1	; () banked
   994  001518  0101               	movlb	1	; () banked
   995  00151A  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
   996  00151C  0101               	movlb	1	; () banked
   997  00151E  510C               	movf	(??_main+12+0)&0ffh,w
   998  001520  0101               	movlb	1	; () banked
   999  001522  6F0D               	movwf	(??_main+13+0)&0ffh
  1000  001524  0E01               	movlw	low(01h)
  1001  001526  0101               	movlb	1	; () banked
  1002  001528  0101               	movlb	1	; () banked
  1003  00152A  6F14               	movwf	((?_LCD_Move))&0ffh
  1004  00152C  0101               	movlb	1	; () banked
  1005  00152E  510D               	movf	(??_main+13+0)&0ffh,w
  1006  001530  EC45  F00E         	call	_LCD_Move	;wreg free
  1007  001534  0E00               	movlw	low(0)
  1008  001536  0101               	movlb	1	; () banked
  1009  001538  0101               	movlb	1	; () banked
  1010  00153A  6F0A               	movwf	((main@i_113))&0ffh
  1011  00153C  0E00               	movlw	high(0)
  1012  00153E  0101               	movlb	1	; () banked
  1013  001540  6F0B               	movwf	((main@i_113+1))&0ffh
  1014  001542  0101               	movlb	1	; () banked
  1015  001544  0101               	movlb	1	; () banked
  1016  001546  510B               	movf	((main@i_113+1))&0ffh,w
  1017  001548  0A80               	xorlw	80h
  1018  00154A  0F80               	addlw	-((0)^80h)
  1019  00154C  0E10               	movlw	010h
  1020  00154E  B4D8               	btfsc	status,2
  1021  001550  5D0A               	subwf	((main@i_113))&0ffh,w
  1022  001552  A0D8               	btfss	status,0
  1023  001554  D001               	goto	u2701
  1024  001556  D001               	goto	u2700
  1025  001558                     u2701:
  1026  001558  D001               	goto	l205
  1027  00155A                     u2700:
  1028  00155A  D021               	goto	l191
  1029                           	
  1030  00155C                     l205:		; BSR set to: ?
  1031                           
  1032  00155C  0E61               	movlw	low((_MSG6))
  1033  00155E  0101               	movlb	1	; () banked
  1034  001560  0101               	movlb	1	; () banked
  1035  001562  250A               	addwf	((main@i_113))&0ffh,w
  1036  001564  6EF6               	movwf	tblptrl
  1037  001566  6AF7               	clrf	tblptrh
  1038  001568  0E10               	movlw	high((_MSG6))
  1039  00156A  22F7               	addwfc	tblptrh
  1040  00156C  6AF8               	clrf	tblptru
  1041  00156E  0E00               	movlw	low highword(__mediumconst)
  1042  001570  22F8               	addwfc	tblptru
  1043  001572  0008               	tblrd	*
  1044                           	
  1045  001574  0101               	movlb	1	; () banked
  1046  001576  CFF5 F116          	movff	tablat,(?_LCD_Write)
  1047  00157A  EC65  F00F         	call	_LCD_Write	;wreg free
  1048  00157E  0101               	movlb	1	; () banked
  1049  001580  0101               	movlb	1	; () banked
  1050  001582  4B0A               	infsnz	((main@i_113))&0ffh
  1051  001584  2B0B               	incf	((main@i_113+1))&0ffh
  1052  001586  0101               	movlb	1	; () banked
  1053  001588  0101               	movlb	1	; () banked
  1054  00158A  510B               	movf	((main@i_113+1))&0ffh,w
  1055  00158C  0A80               	xorlw	80h
  1056  00158E  0F80               	addlw	-((0)^80h)
  1057  001590  0E10               	movlw	010h
  1058  001592  B4D8               	btfsc	status,2
  1059  001594  5D0A               	subwf	((main@i_113))&0ffh,w
  1060  001596  A0D8               	btfss	status,0
  1061  001598  D001               	goto	u2711
  1062  00159A  D001               	goto	u2710
  1063  00159C                     u2711:
  1064  00159C  D7DF               	goto	l205
  1065  00159E                     u2710:
  1066                           	
  1067  00159E                     l206:		; BSR set to: ?
  1068                           
  1069                           	line	215
  1070                           	
  1071  00159E                     l201:		; BSR set to: ?
  1072                           
  1073                           	line	217
  1074                           	
  1075  00159E                     l191:		; BSR set to: ?
  1076                           
  1077                           	line	204
  1078  00159E  A881               	btfss	c:(31756/8),(31756)&7	;volatile
  1079  0015A0  D001               	goto	u2721
  1080  0015A2  D001               	goto	u2720
  1081  0015A4                     u2721:
  1082  0015A4  D6D0               	goto	l192
  1083  0015A6                     u2720:
  1084                           	
  1085  0015A6                     l193:		; BSR set to: ?
  1086                           
  1087                           	line	218
  1088                           ;Main.c: 215: }
  1089                           ;Main.c: 217: }
  1090                           ;Main.c: 218: Start();
  1091  0015A6  EC84  F00B         	call	_Start	;wreg free
  1092                           	line	219
  1093                           	
  1094  0015AA                     l188:		; BSR set to: ?
  1095                           
  1096                           	line	202
  1097  0015AA  5006               	movf	((c:6)),c,w
  1098  0015AC  0A03               	xorlw	3
  1099  0015AE  1007               	iorwf ((c:6+1)),c,w
  1100                           
  1101  0015B0  B4D8               	btfsc	status,2
  1102  0015B2  D001               	goto	u2731
  1103  0015B4  D001               	goto	u2730
  1104  0015B6                     u2731:
  1105  0015B6  D6C6               	goto	l189
  1106  0015B8                     u2730:
  1107                           	
  1108  0015B8                     l190:		; BSR set to: ?
  1109                           
  1110                           	line	223
  1111                           	
  1112  0015B8                     l178:		; BSR set to: ?
  1113                           
  1114                           	line	169
  1115  0015B8  D628               	goto	l179
  1116                           	global	start
  1117  0015BA  EF0C  F004         	goto	start
  1118                           	opt stack 0
  1119                           GLOBAL __end_of_main
  1120  0015BE                     	__end_of_main:
  1121                           	FNSIZE	_main,14,0
  1122                           ; =============== function _main ends ==========
                                 ==
  1123                           
  1124                                   psect   text1,class=CODE,space=0,reloc=2
  1125                           	line	225
  1126                           
  1127                           	opt lm
  1128                           	signat	_main,88
  1129                           	global	_Score
  1130                           	global	??_Score
  1131                           	global	?_Score
  1132                           	file	"Main.c"
  1133                           	line	100
  1134  000000                     	__size_of_Score	equ	__end_of_Score-_Score
  1135                           ;Main.c: 99: void Score(int playerSelect)
  1136                           ;Main.c: 100: {
  1137                           	
  1138  0015BE                     _Score:		; BSR set to: ?
  1139                           
  1140                           	opt stack 29
  1141                           	line	101
  1142                           ;Main.c: 101: if(playerSelect == 1)
  1143  0015BE  0101               	movlb	1	; () banked
  1144  0015C0  0101               	movlb	1	; () banked
  1145  0015C2  050E               	decf	((Score@playerSelect))&0ffh,w
  1146  0015C4  110F               	iorwf ((Score@playerSelect+1))&0ffh,w
  1147                           
  1148  0015C6  A4D8               	btfss	status,2
  1149  0015C8  D001               	goto	u2741
  1150  0015CA  D001               	goto	u2740
  1151  0015CC                     u2741:
  1152  0015CC  D04A               	goto	l158
  1153  0015CE                     u2740:
  1154                           	line	103
  1155                           ;Main.c: 102: {
  1156                           ;Main.c: 103: score1 = score1 + abs(R1-R2) + abs
                                 (G1-G2) + abs(B1-B2);
  1157  0015CE  500D               	movf	((c:13)),c,w
  1158  0015D0  5C19               	subwf	((c:25)),c,w
  1159  0015D2  0101               	movlb	1	; () banked
  1160                           	
  1161  0015D4  0101               	movlb	1	; () banked
  1162  0015D6  6F16               	movwf	((?_abs))&0ffh
  1163  0015D8  500E               	movf	((c:13+1)),c,w
  1164  0015DA  581A               	subwfb	((c:25+1)),c,w
  1165  0015DC  0101               	movlb	1	; () banked
  1166  0015DE  6F17               	movwf	1+((?_abs))&0ffh
  1167  0015E0  EC83  F00F         	call	_abs	;wreg free
  1168  0015E4  C116  F110         	movff	0+?_abs,??_Score+0+0
  1169  0015E8  C117  F111         	movff	1+?_abs,??_Score+0+0+1
  1170  0015EC  5017               	movf	((c:23)),c,w
  1171  0015EE  5C0F               	subwf	((c:15)),c,w
  1172  0015F0  0101               	movlb	1	; () banked
  1173                           	
  1174  0015F2  0101               	movlb	1	; () banked
  1175  0015F4  6F16               	movwf	((?_abs))&0ffh
  1176  0015F6  5018               	movf	((c:23+1)),c,w
  1177  0015F8  5810               	subwfb	((c:15+1)),c,w
  1178  0015FA  0101               	movlb	1	; () banked
  1179  0015FC  6F17               	movwf	1+((?_abs))&0ffh
  1180  0015FE  EC83  F00F         	call	_abs	;wreg free
  1181  001602  0101               	movlb	1	; () banked
  1182  001604  0101               	movlb	1	; () banked
  1183  001606  5116               	movf	(0+?_abs)&0ffh,w
  1184  001608  0101               	movlb	1	; () banked
  1185  00160A  2510               	addwf	(??_Score+0+0)&0ffh,w
  1186  00160C  0101               	movlb	1	; () banked
  1187  00160E  6F12               	movwf	(??_Score+2+0)&0ffh
  1188  001610  0101               	movlb	1	; () banked
  1189  001612  0101               	movlb	1	; () banked
  1190  001614  5117               	movf	(1+?_abs)&0ffh,w
  1191  001616  0101               	movlb	1	; () banked
  1192  001618  2111               	addwfc	(??_Score+0+1)&0ffh,w
  1193  00161A  0101               	movlb	1	; () banked
  1194  00161C  6F13               	movwf	1+(??_Score+2+0)&0ffh
  1195  00161E  501F               	movf	((c:31)),c,w
  1196  001620  5C11               	subwf	((c:17)),c,w
  1197  001622  0101               	movlb	1	; () banked
  1198                           	
  1199  001624  0101               	movlb	1	; () banked
  1200  001626  6F16               	movwf	((?_abs))&0ffh
  1201  001628  5020               	movf	((c:31+1)),c,w
  1202  00162A  5812               	subwfb	((c:17+1)),c,w
  1203  00162C  0101               	movlb	1	; () banked
  1204  00162E  6F17               	movwf	1+((?_abs))&0ffh
  1205  001630  EC83  F00F         	call	_abs	;wreg free
  1206  001634  0101               	movlb	1	; () banked
  1207  001636  0101               	movlb	1	; () banked
  1208  001638  5116               	movf	(0+?_abs)&0ffh,w
  1209  00163A  0101               	movlb	1	; () banked
  1210  00163C  2512               	addwf	(??_Score+2+0)&0ffh,w
  1211  00163E  0101               	movlb	1	; () banked
  1212  001640  6F14               	movwf	(??_Score+4+0)&0ffh
  1213  001642  0101               	movlb	1	; () banked
  1214  001644  0101               	movlb	1	; () banked
  1215  001646  5117               	movf	(1+?_abs)&0ffh,w
  1216  001648  0101               	movlb	1	; () banked
  1217  00164A  2113               	addwfc	(??_Score+2+1)&0ffh,w
  1218  00164C  0101               	movlb	1	; () banked
  1219  00164E  6F15               	movwf	1+(??_Score+4+0)&0ffh
  1220  001650  500B               	movf	((c:11)),c,w
  1221  001652  0101               	movlb	1	; () banked
  1222  001654  2514               	addwf	(??_Score+4+0)&0ffh,w
  1223                           	
  1224  001656  6E0B               	movwf	((c:11)),c
  1225  001658  500C               	movf	((c:11+1)),c,w
  1226  00165A  0101               	movlb	1	; () banked
  1227  00165C  2115               	addwfc	(??_Score+4+1)&0ffh,w
  1228  00165E  6E0C               	movwf	1+((c:11)),c
  1229                           	line	104
  1230                           ;Main.c: 104: }
  1231  001660  D052               	goto	l159
  1232                           	line	105
  1233                           	
  1234  001662                     l158:		; BSR set to: ?
  1235                           
  1236                           ;Main.c: 105: else if(playerSelect == 2)
  1237  001662  0101               	movlb	1	; () banked
  1238  001664  0101               	movlb	1	; () banked
  1239  001666  510E               	movf	((Score@playerSelect))&0ffh,w
  1240  001668  0A02               	xorlw	2
  1241  00166A  110F               	iorwf ((Score@playerSelect+1))&0ffh,w
  1242                           
  1243  00166C  A4D8               	btfss	status,2
  1244  00166E  D001               	goto	u2751
  1245  001670  D001               	goto	u2750
  1246  001672                     u2751:
  1247  001672  D049               	goto	l159
  1248  001674                     u2750:
  1249                           	line	107
  1250                           ;Main.c: 106: {
  1251                           ;Main.c: 107: score2 = score2 + abs(R1-R2) + abs
                                 (G1-G2) + abs(B1-B2);
  1252  001674  500D               	movf	((c:13)),c,w
  1253  001676  5C19               	subwf	((c:25)),c,w
  1254  001678  0101               	movlb	1	; () banked
  1255                           	
  1256  00167A  0101               	movlb	1	; () banked
  1257  00167C  6F16               	movwf	((?_abs))&0ffh
  1258  00167E  500E               	movf	((c:13+1)),c,w
  1259  001680  581A               	subwfb	((c:25+1)),c,w
  1260  001682  0101               	movlb	1	; () banked
  1261  001684  6F17               	movwf	1+((?_abs))&0ffh
  1262  001686  EC83  F00F         	call	_abs	;wreg free
  1263  00168A  C116  F110         	movff	0+?_abs,??_Score+0+0
  1264  00168E  C117  F111         	movff	1+?_abs,??_Score+0+0+1
  1265  001692  5017               	movf	((c:23)),c,w
  1266  001694  5C0F               	subwf	((c:15)),c,w
  1267  001696  0101               	movlb	1	; () banked
  1268                           	
  1269  001698  0101               	movlb	1	; () banked
  1270  00169A  6F16               	movwf	((?_abs))&0ffh
  1271  00169C  5018               	movf	((c:23+1)),c,w
  1272  00169E  5810               	subwfb	((c:15+1)),c,w
  1273  0016A0  0101               	movlb	1	; () banked
  1274  0016A2  6F17               	movwf	1+((?_abs))&0ffh
  1275  0016A4  EC83  F00F         	call	_abs	;wreg free
  1276  0016A8  0101               	movlb	1	; () banked
  1277  0016AA  0101               	movlb	1	; () banked
  1278  0016AC  5116               	movf	(0+?_abs)&0ffh,w
  1279  0016AE  0101               	movlb	1	; () banked
  1280  0016B0  2510               	addwf	(??_Score+0+0)&0ffh,w
  1281  0016B2  0101               	movlb	1	; () banked
  1282  0016B4  6F12               	movwf	(??_Score+2+0)&0ffh
  1283  0016B6  0101               	movlb	1	; () banked
  1284  0016B8  0101               	movlb	1	; () banked
  1285  0016BA  5117               	movf	(1+?_abs)&0ffh,w
  1286  0016BC  0101               	movlb	1	; () banked
  1287  0016BE  2111               	addwfc	(??_Score+0+1)&0ffh,w
  1288  0016C0  0101               	movlb	1	; () banked
  1289  0016C2  6F13               	movwf	1+(??_Score+2+0)&0ffh
  1290  0016C4  501F               	movf	((c:31)),c,w
  1291  0016C6  5C11               	subwf	((c:17)),c,w
  1292  0016C8  0101               	movlb	1	; () banked
  1293                           	
  1294  0016CA  0101               	movlb	1	; () banked
  1295  0016CC  6F16               	movwf	((?_abs))&0ffh
  1296  0016CE  5020               	movf	((c:31+1)),c,w
  1297  0016D0  5812               	subwfb	((c:17+1)),c,w
  1298  0016D2  0101               	movlb	1	; () banked
  1299  0016D4  6F17               	movwf	1+((?_abs))&0ffh
  1300  0016D6  EC83  F00F         	call	_abs	;wreg free
  1301  0016DA  0101               	movlb	1	; () banked
  1302  0016DC  0101               	movlb	1	; () banked
  1303  0016DE  5116               	movf	(0+?_abs)&0ffh,w
  1304  0016E0  0101               	movlb	1	; () banked
  1305  0016E2  2512               	addwf	(??_Score+2+0)&0ffh,w
  1306  0016E4  0101               	movlb	1	; () banked
  1307  0016E6  6F14               	movwf	(??_Score+4+0)&0ffh
  1308  0016E8  0101               	movlb	1	; () banked
  1309  0016EA  0101               	movlb	1	; () banked
  1310  0016EC  5117               	movf	(1+?_abs)&0ffh,w
  1311  0016EE  0101               	movlb	1	; () banked
  1312  0016F0  2113               	addwfc	(??_Score+2+1)&0ffh,w
  1313  0016F2  0101               	movlb	1	; () banked
  1314  0016F4  6F15               	movwf	1+(??_Score+4+0)&0ffh
  1315  0016F6  5009               	movf	((c:9)),c,w
  1316  0016F8  0101               	movlb	1	; () banked
  1317  0016FA  2514               	addwf	(??_Score+4+0)&0ffh,w
  1318                           	
  1319  0016FC  6E09               	movwf	((c:9)),c
  1320  0016FE  500A               	movf	((c:9+1)),c,w
  1321  001700  0101               	movlb	1	; () banked
  1322  001702  2115               	addwfc	(??_Score+4+1)&0ffh,w
  1323  001704  6E0A               	movwf	1+((c:9)),c
  1324                           	line	108
  1325                           	
  1326  001706                     l160:		; BSR set to: ?
  1327                           
  1328                           	line	109
  1329                           	
  1330  001706                     l159:		; BSR set to: ?
  1331                           
  1332                           ;Main.c: 108: }
  1333                           ;Main.c: 109: }
  1334  001706                     l157:
  1335                           			; BSR set to: ?
  1336                           
  1337  001706  0012               	return
  1338                           	opt stack 0
  1339                           GLOBAL __end_of_Score
  1340  001708                     	__end_of_Score:
  1341                           	FNSIZE	_Score,6,2
  1342                           ; =============== function _Score ends =========
                                 ===
  1343                           
  1344                           	signat	_Score,4216
  1345                           	global	_Start
  1346                           	global	??_Start
  1347                           	global	?_Start
  1348                                   psect   text2,class=CODE,space=0,reloc=2
  1349                           
  1350                           	opt lm
  1351                           	file	"Main.c"
  1352                           	line	112
  1353  000000                     	__size_of_Start	equ	__end_of_Start-_Start
  1354                           ;Main.c: 111: void Start()
  1355                           ;Main.c: 112: {
  1356                           	
  1357  001708                     _Start:		; BSR set to: ?
  1358                           
  1359                           	opt stack 29
  1360                           	line	113
  1361  001708  ECBA  F00F         	call	_RandomColor	;wreg free
  1362                           	line	114
  1363                           ;Main.c: 114: LCD_Move(0,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG0[i]);
  1364  00170C  0101               	movlb	1	; () banked
  1365  00170E  6F12               	movwf	(??_Start+4+0)&0ffh
  1366  001710  0E00               	movlw	low(0)
  1367  001712  0101               	movlb	1	; () banked
  1368  001714  0101               	movlb	1	; () banked
  1369  001716  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1370  001718  0101               	movlb	1	; () banked
  1371  00171A  5112               	movf	(??_Start+4+0)&0ffh,w
  1372  00171C  0101               	movlb	1	; () banked
  1373  00171E  6F13               	movwf	(??_Start+5+0)&0ffh
  1374  001720  0E00               	movlw	low(0)
  1375  001722  0101               	movlb	1	; () banked
  1376  001724  0101               	movlb	1	; () banked
  1377  001726  6F14               	movwf	((?_LCD_Move))&0ffh
  1378  001728  0101               	movlb	1	; () banked
  1379  00172A  5113               	movf	(??_Start+5+0)&0ffh,w
  1380  00172C  EC45  F00E         	call	_LCD_Move	;wreg free
  1381  001730  0E00               	movlw	low(0)
  1382  001732  0101               	movlb	1	; () banked
  1383  001734  0101               	movlb	1	; () banked
  1384  001736  6F0E               	movwf	((Start@i))&0ffh
  1385  001738  0E00               	movlw	high(0)
  1386  00173A  0101               	movlb	1	; () banked
  1387  00173C  6F0F               	movwf	((Start@i+1))&0ffh
  1388  00173E  0101               	movlb	1	; () banked
  1389  001740  0101               	movlb	1	; () banked
  1390  001742  510F               	movf	((Start@i+1))&0ffh,w
  1391  001744  0A80               	xorlw	80h
  1392  001746  0F80               	addlw	-((0)^80h)
  1393  001748  0E10               	movlw	010h
  1394  00174A  B4D8               	btfsc	status,2
  1395  00174C  5D0E               	subwf	((Start@i))&0ffh,w
  1396  00174E  A0D8               	btfss	status,0
  1397  001750  D001               	goto	u2761
  1398  001752  D001               	goto	u2760
  1399  001754                     u2761:
  1400  001754  D001               	goto	l162
  1401  001756                     u2760:
  1402  001756  D021               	goto	l163
  1403                           	
  1404  001758                     l162:		; BSR set to: ?
  1405                           
  1406  001758  0E01               	movlw	low((_MSG0))
  1407  00175A  0101               	movlb	1	; () banked
  1408  00175C  0101               	movlb	1	; () banked
  1409  00175E  250E               	addwf	((Start@i))&0ffh,w
  1410  001760  6EF6               	movwf	tblptrl
  1411  001762  6AF7               	clrf	tblptrh
  1412  001764  0E10               	movlw	high((_MSG0))
  1413  001766  22F7               	addwfc	tblptrh
  1414  001768  6AF8               	clrf	tblptru
  1415  00176A  0E00               	movlw	low highword(__mediumconst)
  1416  00176C  22F8               	addwfc	tblptru
  1417  00176E  0008               	tblrd	*
  1418                           	
  1419  001770  0101               	movlb	1	; () banked
  1420  001772  CFF5 F116          	movff	tablat,(?_LCD_Write)
  1421  001776  EC65  F00F         	call	_LCD_Write	;wreg free
  1422  00177A  0101               	movlb	1	; () banked
  1423  00177C  0101               	movlb	1	; () banked
  1424  00177E  4B0E               	infsnz	((Start@i))&0ffh
  1425  001780  2B0F               	incf	((Start@i+1))&0ffh
  1426  001782  0101               	movlb	1	; () banked
  1427  001784  0101               	movlb	1	; () banked
  1428  001786  510F               	movf	((Start@i+1))&0ffh,w
  1429  001788  0A80               	xorlw	80h
  1430  00178A  0F80               	addlw	-((0)^80h)
  1431  00178C  0E10               	movlw	010h
  1432  00178E  B4D8               	btfsc	status,2
  1433  001790  5D0E               	subwf	((Start@i))&0ffh,w
  1434  001792  A0D8               	btfss	status,0
  1435  001794  D001               	goto	u2771
  1436  001796  D001               	goto	u2770
  1437  001798                     u2771:
  1438  001798  D7DF               	goto	l162
  1439  00179A                     u2770:
  1440                           	
  1441  00179A                     l163:		; BSR set to: ?
  1442                           
  1443                           	line	115
  1444                           ;Main.c: 115: LCD_Move(1,0); for (int i=0; i<16;
                                  i++) LCD_Write(MSG1[i]);
  1445  00179A  0101               	movlb	1	; () banked
  1446  00179C  6F12               	movwf	(??_Start+4+0)&0ffh
  1447  00179E  0E00               	movlw	low(0)
  1448  0017A0  0101               	movlb	1	; () banked
  1449  0017A2  0101               	movlb	1	; () banked
  1450  0017A4  6F15               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1451  0017A6  0101               	movlb	1	; () banked
  1452  0017A8  5112               	movf	(??_Start+4+0)&0ffh,w
  1453  0017AA  0101               	movlb	1	; () banked
  1454  0017AC  6F13               	movwf	(??_Start+5+0)&0ffh
  1455  0017AE  0E01               	movlw	low(01h)
  1456  0017B0  0101               	movlb	1	; () banked
  1457  0017B2  0101               	movlb	1	; () banked
  1458  0017B4  6F14               	movwf	((?_LCD_Move))&0ffh
  1459  0017B6  0101               	movlb	1	; () banked
  1460  0017B8  5113               	movf	(??_Start+5+0)&0ffh,w
  1461  0017BA  EC45  F00E         	call	_LCD_Move	;wreg free
  1462  0017BE  0E00               	movlw	low(0)
  1463  0017C0  0101               	movlb	1	; () banked
  1464  0017C2  0101               	movlb	1	; () banked
  1465  0017C4  6F10               	movwf	((Start@i_106))&0ffh
  1466  0017C6  0E00               	movlw	high(0)
  1467  0017C8  0101               	movlb	1	; () banked
  1468  0017CA  6F11               	movwf	((Start@i_106+1))&0ffh
  1469  0017CC  0101               	movlb	1	; () banked
  1470  0017CE  0101               	movlb	1	; () banked
  1471  0017D0  5111               	movf	((Start@i_106+1))&0ffh,w
  1472  0017D2  0A80               	xorlw	80h
  1473  0017D4  0F80               	addlw	-((0)^80h)
  1474  0017D6  0E10               	movlw	010h
  1475  0017D8  B4D8               	btfsc	status,2
  1476  0017DA  5D10               	subwf	((Start@i_106))&0ffh,w
  1477  0017DC  A0D8               	btfss	status,0
  1478  0017DE  D001               	goto	u2781
  1479  0017E0  D001               	goto	u2780
  1480  0017E2                     u2781:
  1481  0017E2  D001               	goto	l165
  1482  0017E4                     u2780:
  1483  0017E4  D021               	goto	l166
  1484                           	
  1485  0017E6                     l165:		; BSR set to: ?
  1486                           
  1487  0017E6  0E11               	movlw	low((_MSG1))
  1488  0017E8  0101               	movlb	1	; () banked
  1489  0017EA  0101               	movlb	1	; () banked
  1490  0017EC  2510               	addwf	((Start@i_106))&0ffh,w
  1491  0017EE  6EF6               	movwf	tblptrl
  1492  0017F0  6AF7               	clrf	tblptrh
  1493  0017F2  0E10               	movlw	high((_MSG1))
  1494  0017F4  22F7               	addwfc	tblptrh
  1495  0017F6  6AF8               	clrf	tblptru
  1496  0017F8  0E00               	movlw	low highword(__mediumconst)
  1497  0017FA  22F8               	addwfc	tblptru
  1498  0017FC  0008               	tblrd	*
  1499                           	
  1500  0017FE  0101               	movlb	1	; () banked
  1501  001800  CFF5 F116          	movff	tablat,(?_LCD_Write)
  1502  001804  EC65  F00F         	call	_LCD_Write	;wreg free
  1503  001808  0101               	movlb	1	; () banked
  1504  00180A  0101               	movlb	1	; () banked
  1505  00180C  4B10               	infsnz	((Start@i_106))&0ffh
  1506  00180E  2B11               	incf	((Start@i_106+1))&0ffh
  1507  001810  0101               	movlb	1	; () banked
  1508  001812  0101               	movlb	1	; () banked
  1509  001814  5111               	movf	((Start@i_106+1))&0ffh,w
  1510  001816  0A80               	xorlw	80h
  1511  001818  0F80               	addlw	-((0)^80h)
  1512  00181A  0E10               	movlw	010h
  1513  00181C  B4D8               	btfsc	status,2
  1514  00181E  5D10               	subwf	((Start@i_106))&0ffh,w
  1515  001820  A0D8               	btfss	status,0
  1516  001822  D001               	goto	u2791
  1517  001824  D001               	goto	u2790
  1518  001826                     u2791:
  1519  001826  D7DF               	goto	l165
  1520  001828                     u2790:
  1521                           	
  1522  001828                     l166:		; BSR set to: ?
  1523                           
  1524                           	line	116
  1525                           ;Main.c: 116: roundNum = 0;
  1526  001828  0E00               	movlw	low(0)
  1527  00182A  6E06               	movwf	((c:6)),c
  1528  00182C  0E00               	movlw	high(0)
  1529  00182E  6E07               	movwf	((c:6+1)),c
  1530                           	line	117
  1531                           ;Main.c: 117: score1 = 0;
  1532  001830  0E00               	movlw	low(0)
  1533  001832  6E0B               	movwf	((c:11)),c
  1534  001834  0E00               	movlw	high(0)
  1535  001836  6E0C               	movwf	((c:11+1)),c
  1536                           	line	118
  1537                           ;Main.c: 118: score2 = 0;
  1538  001838  0E00               	movlw	low(0)
  1539  00183A  6E09               	movwf	((c:9)),c
  1540  00183C  0E00               	movlw	high(0)
  1541  00183E  6E0A               	movwf	((c:9+1)),c
  1542                           	line	119
  1543                           ;Main.c: 119: }
  1544  001840                     l161:
  1545                           			; BSR set to: ?
  1546                           
  1547  001840  0012               	return
  1548                           	opt stack 0
  1549                           GLOBAL __end_of_Start
  1550  001842                     	__end_of_Start:
  1551                           	FNSIZE	_Start,6,0
  1552                           ; =============== function _Start ends =========
                                 ===
  1553                           
  1554                           	signat	_Start,88
  1555                           	global	_A2D_Read
  1556                           	global	??_A2D_Read
  1557                           	global	?_A2D_Read
  1558                                   psect   text3,class=CODE,space=0,reloc=2
  1559                           
  1560                           	opt lm
  1561                           	file	"Main.c"
  1562                           	line	33
  1563  000000                     	__size_of_A2D_Read	equ	__end_of_A2D_Read-_A2D_R
                                 ead
  1564                           ;Main.c: 16: unsigned int R1, G1, B1, R2, G2, B2
                                  = 1;
  1565                           ;Main.c: 17: unsigned int count, count2 = 0;
  1566                           ;Main.c: 18: unsigned int score1, score2 = 0;
  1567                           ;Main.c: 19: unsigned int foul, P1in, P2in, roun
                                 dNum = 0;
  1568                           ;Main.c: 20: const unsigned char MSG0[16] = "Pla
                                 yer 1:       ";
  1569                           ;Main.c: 21: const unsigned char MSG1[16] = "Pla
                                 yer 2:       ";
  1570                           ;Main.c: 22: const unsigned char MSG2[16] = "   
                                 Press  RB4   ";
  1571                           ;Main.c: 23: const unsigned char MSG3[16] = "  T
                                 o begin game ";
  1572                           ;Main.c: 24: const unsigned char MSG4[16] = " Pl
                                 ayer 1 Wins! ";
  1573                           	
  1574  001E0C                     _A2D_Read:		; BSR set to: ?
  1575                           
  1576                           	opt stack 29
  1577                           	line	36
  1578  001E0C  0101               	movlb	1	; () banked
  1579  001E0E  0101               	movlb	1	; () banked
  1580  001E10  510E               	movf	((A2D_Read@c))&0ffh,w
  1581  001E12  0B0F               	andlw	low(0Fh)
  1582  001E14  0101               	movlb	1	; () banked
  1583  001E16  0101               	movlb	1	; () banked
  1584  001E18  6F0E               	movwf	((A2D_Read@c))&0ffh
  1585                           	line	37
  1586                           ;Main.c: 37: ADCON0 = (c << 2) + 0x01;
  1587  001E1A  C10E  F111         	movff	(A2D_Read@c),??_A2D_Read+1+0
  1588  001E1E  90D8               	bcf	status,0
  1589  001E20  0101               	movlb	1	; () banked
  1590  001E22  3711               	rlcf	(??_A2D_Read+1+0)&0ffh
  1591  001E24  90D8               	bcf	status,0
  1592  001E26  0101               	movlb	1	; () banked
  1593  001E28  3711               	rlcf	(??_A2D_Read+1+0)&0ffh
  1594                           
  1595  001E2A  0101               	movlb	1	; () banked
  1596  001E2C  2911               	incf	(??_A2D_Read+1+0)&0ffh,w
  1597  001E2E  6EC2               	movwf	((c:4034)),c	;volatile
  1598                           	line	38
  1599                           ;Main.c: 38: for (i=0; i<20; i++);
  1600  001E30  0101               	movlb	1	; () banked
  1601  001E32  6F11               	movwf	(??_A2D_Read+1+0)&0ffh
  1602  001E34  0E00               	movlw	low(0)
  1603  001E36  0101               	movlb	1	; () banked
  1604  001E38  0101               	movlb	1	; () banked
  1605  001E3A  6F10               	movwf	((A2D_Read@i))&0ffh
  1606  001E3C  0101               	movlb	1	; () banked
  1607  001E3E  5111               	movf	(??_A2D_Read+1+0)&0ffh,w
  1608  001E40  0E13               	movlw	(014h-1)
  1609  001E42  0101               	movlb	1	; () banked
  1610  001E44  0101               	movlb	1	; () banked
  1611  001E46  6510               	cpfsgt	((A2D_Read@i))&0ffh
  1612  001E48  D001               	goto	u2801
  1613  001E4A  D001               	goto	u2800
  1614  001E4C                     u2801:
  1615  001E4C  D001               	goto	l136
  1616  001E4E                     u2800:
  1617  001E4E  D00A               	goto	l137
  1618                           	
  1619  001E50                     l136:		; BSR set to: ?
  1620                           
  1621  001E50  0101               	movlb	1	; () banked
  1622  001E52  0101               	movlb	1	; () banked
  1623  001E54  2B10               	incf	((A2D_Read@i))&0ffh
  1624  001E56  0E13               	movlw	(014h-1)
  1625  001E58  0101               	movlb	1	; () banked
  1626  001E5A  0101               	movlb	1	; () banked
  1627  001E5C  6510               	cpfsgt	((A2D_Read@i))&0ffh
  1628  001E5E  D001               	goto	u2811
  1629  001E60  D001               	goto	u2810
  1630  001E62                     u2811:
  1631  001E62  D7F6               	goto	l136
  1632  001E64                     u2810:
  1633                           	
  1634  001E64                     l137:		; BSR set to: ?
  1635                           
  1636                           	line	39
  1637                           ;Main.c: 39: GODONE = 1;
  1638  001E64  82C2               	bsf	c:(32273/8),(32273)&7	;volatile
  1639                           	line	40
  1640                           ;Main.c: 40: while(GODONE);
  1641  001E66  D000               	goto	l139
  1642                           	
  1643  001E68                     l139:		; BSR set to: ?
  1644                           
  1645  001E68  B2C2               	btfsc	c:(32273/8),(32273)&7	;volatile
  1646  001E6A  D001               	goto	u2821
  1647  001E6C  D001               	goto	u2820
  1648  001E6E                     u2821:
  1649  001E6E  D7FC               	goto	l139
  1650  001E70                     u2820:
  1651                           	
  1652  001E70                     l141:		; BSR set to: ?
  1653                           
  1654                           	line	41
  1655  001E70  CFC3 F10E          	movff	(c:4035),(?_A2D_Read)	;volatile
  1656  001E74  CFC4 F10F          	movff	(c:4035+1),(?_A2D_Read+1)	;volatile
  1657  001E78  D000               	goto	l135
  1658                           	line	42
  1659                           ;Main.c: 42: }
  1660  001E7A                     l135:
  1661                           			; BSR set to: ?
  1662                           
  1663  001E7A  0012               	return
  1664                           	opt stack 0
  1665                           GLOBAL __end_of_A2D_Read
  1666  001E7C                     	__end_of_A2D_Read:
  1667                           	FNSIZE	_A2D_Read,2,2
  1668                           ; =============== function _A2D_Read ends ======
                                 ======
  1669                           
  1670                           	signat	_A2D_Read,4218
  1671                           	global	_LCD_Init
  1672                           	global	??_LCD_Init
  1673                           	global	?_LCD_Init
  1674                                   psect   text4,class=CODE,space=0,reloc=2
  1675                           
  1676                           	opt lm
  1677                           	file	"LCD_PortD.c"
  1678                           	line	73
  1679  000000                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_I
                                 nit
  1680                           ;LCD_PortD.c: 72: void LCD_Init(void)
  1681                           ;LCD_PortD.c: 73: {
  1682                           	
  1683  001D0E                     _LCD_Init:		; BSR set to: ?
  1684                           
  1685                           	opt stack 29
  1686                           	line	74
  1687  001D0E  0E01               	movlw	low(01h)
  1688  001D10  6E95               	movwf	((c:3989)),c	;volatile
  1689                           	line	75
  1690                           ;LCD_PortD.c: 75: RD1 = 0;
  1691  001D12  9283               	bcf	c:(31769/8),(31769)&7	;volatile
  1692                           	line	76
  1693                           ;LCD_PortD.c: 76: LCD_Inst(0x33);
  1694  001D14  0101               	movlb	1	; () banked
  1695  001D16  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1696  001D18  0E33               	movlw	low(033h)
  1697  001D1A  0101               	movlb	1	; () banked
  1698  001D1C  0101               	movlb	1	; () banked
  1699  001D1E  6F16               	movwf	((?_LCD_Inst))&0ffh
  1700  001D20  0101               	movlb	1	; () banked
  1701  001D22  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1702  001D24  EC3E  F00F         	call	_LCD_Inst	;wreg free
  1703                           	line	77
  1704                           ;LCD_PortD.c: 77: LCD_Inst(0x32);
  1705  001D28  0101               	movlb	1	; () banked
  1706  001D2A  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1707  001D2C  0E32               	movlw	low(032h)
  1708  001D2E  0101               	movlb	1	; () banked
  1709  001D30  0101               	movlb	1	; () banked
  1710  001D32  6F16               	movwf	((?_LCD_Inst))&0ffh
  1711  001D34  0101               	movlb	1	; () banked
  1712  001D36  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1713  001D38  EC3E  F00F         	call	_LCD_Inst	;wreg free
  1714                           	line	78
  1715                           ;LCD_PortD.c: 78: LCD_Inst(0x28);
  1716  001D3C  0101               	movlb	1	; () banked
  1717  001D3E  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1718  001D40  0E28               	movlw	low(028h)
  1719  001D42  0101               	movlb	1	; () banked
  1720  001D44  0101               	movlb	1	; () banked
  1721  001D46  6F16               	movwf	((?_LCD_Inst))&0ffh
  1722  001D48  0101               	movlb	1	; () banked
  1723  001D4A  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1724  001D4C  EC3E  F00F         	call	_LCD_Inst	;wreg free
  1725                           	line	79
  1726                           ;LCD_PortD.c: 79: LCD_Inst(0x0E);
  1727  001D50  0101               	movlb	1	; () banked
  1728  001D52  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1729  001D54  0E0E               	movlw	low(0Eh)
  1730  001D56  0101               	movlb	1	; () banked
  1731  001D58  0101               	movlb	1	; () banked
  1732  001D5A  6F16               	movwf	((?_LCD_Inst))&0ffh
  1733  001D5C  0101               	movlb	1	; () banked
  1734  001D5E  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1735  001D60  EC3E  F00F         	call	_LCD_Inst	;wreg free
  1736                           	line	80
  1737                           ;LCD_PortD.c: 80: LCD_Inst(0x01);
  1738  001D64  0101               	movlb	1	; () banked
  1739  001D66  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1740  001D68  0E01               	movlw	low(01h)
  1741  001D6A  0101               	movlb	1	; () banked
  1742  001D6C  0101               	movlb	1	; () banked
  1743  001D6E  6F16               	movwf	((?_LCD_Inst))&0ffh
  1744  001D70  0101               	movlb	1	; () banked
  1745  001D72  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1746  001D74  EC3E  F00F         	call	_LCD_Inst	;wreg free
  1747                           	line	81
  1748                           ;LCD_PortD.c: 81: LCD_Inst(0x06);
  1749  001D78  0101               	movlb	1	; () banked
  1750  001D7A  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1751  001D7C  0E06               	movlw	low(06h)
  1752  001D7E  0101               	movlb	1	; () banked
  1753  001D80  0101               	movlb	1	; () banked
  1754  001D82  6F16               	movwf	((?_LCD_Inst))&0ffh
  1755  001D84  0101               	movlb	1	; () banked
  1756  001D86  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1757  001D88  EC3E  F00F         	call	_LCD_Inst	;wreg free
  1758                           	line	82
  1759                           ;LCD_PortD.c: 82: }
  1760  001D8C                     l134:
  1761                           			; BSR set to: ?
  1762                           
  1763  001D8C  0012               	return
  1764                           	opt stack 0
  1765                           GLOBAL __end_of_LCD_Init
  1766  001D8E                     	__end_of_LCD_Init:
  1767                           	FNSIZE	_LCD_Init,1,0
  1768                           ; =============== function _LCD_Init ends ======
                                 ======
  1769                           
  1770                           	signat	_LCD_Init,88
  1771                           	global	_LCD_Out
  1772                           	global	??_LCD_Out
  1773                           	global	?_LCD_Out
  1774                                   psect   text5,class=CODE,space=0,reloc=2
  1775                           
  1776                           	opt lm
  1777                           	file	"Main.c"
  1778                           	line	45
  1779  000000                     	__size_of_LCD_Out	equ	__end_of_LCD_Out-_LCD_Out
  1780                           ;Main.c: 44: void LCD_Out(unsigned int DATA)
  1781                           ;Main.c: 45: {
  1782                           	
  1783  001842                     _LCD_Out:		; BSR set to: ?
  1784                           
  1785                           	opt stack 29
  1786                           	line	48
  1787                           ;Main.c: 46: unsigned char A[4], i;
  1788                           ;Main.c: 48: for (i=0; i<4; i++) {
  1789  001842  0101               	movlb	1	; () banked
  1790  001844  6F15               	movwf	(??_LCD_Out+5+0)&0ffh
  1791  001846  0E00               	movlw	low(0)
  1792  001848  0101               	movlb	1	; () banked
  1793  00184A  0101               	movlb	1	; () banked
  1794  00184C  6F10               	movwf	((LCD_Out@i))&0ffh
  1795  00184E  0101               	movlb	1	; () banked
  1796  001850  5115               	movf	(??_LCD_Out+5+0)&0ffh,w
  1797  001852  0E03               	movlw	(04h-1)
  1798  001854  0101               	movlb	1	; () banked
  1799  001856  0101               	movlb	1	; () banked
  1800  001858  6510               	cpfsgt	((LCD_Out@i))&0ffh
  1801  00185A  D001               	goto	u2831
  1802  00185C  D001               	goto	u2830
  1803  00185E                     u2831:
  1804  00185E  D001               	goto	l143
  1805  001860                     u2830:
  1806  001860  D036               	goto	l144
  1807                           	
  1808  001862                     l143:		; BSR set to: ?
  1809                           
  1810                           	line	49
  1811                           ;Main.c: 49: A[i] = DATA % 10;
  1812  001862  0101               	movlb	1	; () banked
  1813  001864  0E11               	movlw	low(LCD_Out@A)
  1814  001866  0101               	movlb	1	; () banked
  1815  001868  0101               	movlb	1	; () banked
  1816  00186A  2510               	addwf	((LCD_Out@i))&0ffh,w
  1817  00186C  6EE9               	movwf	c:fsr0l
  1818  00186E  6AEA               	clrf	1+c:fsr0l
  1819  001870  0101               	movlb	1	; () banked
  1820  001872  0E01               	movlw	high(LCD_Out@A)
  1821  001874  22EA               	addwfc	1+c:fsr0l
  1822  001876  0E0A               	movlw	low(0Ah)
  1823  001878  0101               	movlb	1	; () banked
  1824  00187A  0101               	movlb	1	; () banked
  1825  00187C  6F18               	movwf	(0+(?___lwmod+02h))&0ffh
  1826  00187E  0E00               	movlw	high(0Ah)
  1827  001880  0101               	movlb	1	; () banked
  1828  001882  6F19               	movwf	(1+(?___lwmod+02h))&0ffh
  1829  001884  C10E  F116         	movff	(LCD_Out@DATA),(?___lwmod)
  1830  001888  C10F  F117         	movff	(LCD_Out@DATA+1),(?___lwmod+1)
  1831  00188C  ECB6  F00D         	call	___lwmod	;wreg free
  1832  001890  0101               	movlb	1	; () banked
  1833  001892  0101               	movlb	1	; () banked
  1834  001894  5116               	movf	(0+?___lwmod)&0ffh,w
  1835  001896  6EEF               	movwf	indf0
  1836                           
  1837                           	line	50
  1838                           ;Main.c: 50: DATA = DATA / 10;
  1839  001898  0E0A               	movlw	low(0Ah)
  1840  00189A  0101               	movlb	1	; () banked
  1841  00189C  0101               	movlb	1	; () banked
  1842  00189E  6F18               	movwf	(0+(?___lwdiv+02h))&0ffh
  1843  0018A0  0E00               	movlw	high(0Ah)
  1844  0018A2  0101               	movlb	1	; () banked
  1845  0018A4  6F19               	movwf	(1+(?___lwdiv+02h))&0ffh
  1846  0018A6  C10E  F116         	movff	(LCD_Out@DATA),(?___lwdiv)
  1847  0018AA  C10F  F117         	movff	(LCD_Out@DATA+1),(?___lwdiv+1)
  1848  0018AE  EC08  F00D         	call	___lwdiv	;wreg free
  1849  0018B2  C116  F10E         	movff	0+?___lwdiv,(LCD_Out@DATA)
  1850  0018B6  C117  F10F         	movff	1+?___lwdiv,(LCD_Out@DATA+1)
  1851                           	line	48
  1852  0018BA  0101               	movlb	1	; () banked
  1853  0018BC  0101               	movlb	1	; () banked
  1854  0018BE  2B10               	incf	((LCD_Out@i))&0ffh
  1855  0018C0  0E03               	movlw	(04h-1)
  1856  0018C2  0101               	movlb	1	; () banked
  1857  0018C4  0101               	movlb	1	; () banked
  1858  0018C6  6510               	cpfsgt	((LCD_Out@i))&0ffh
  1859  0018C8  D001               	goto	u2841
  1860  0018CA  D001               	goto	u2840
  1861  0018CC                     u2841:
  1862  0018CC  D7CA               	goto	l143
  1863  0018CE                     u2840:
  1864                           	
  1865  0018CE                     l144:		; BSR set to: ?
  1866                           
  1867                           	line	52
  1868                           ;Main.c: 51: }
  1869                           ;Main.c: 52: for (i=4; i>0; i--) {
  1870  0018CE  0101               	movlb	1	; () banked
  1871  0018D0  6F15               	movwf	(??_LCD_Out+5+0)&0ffh
  1872  0018D2  0E04               	movlw	low(04h)
  1873  0018D4  0101               	movlb	1	; () banked
  1874  0018D6  0101               	movlb	1	; () banked
  1875  0018D8  6F10               	movwf	((LCD_Out@i))&0ffh
  1876  0018DA  0101               	movlb	1	; () banked
  1877  0018DC  5115               	movf	(??_LCD_Out+5+0)&0ffh,w
  1878  0018DE  0101               	movlb	1	; () banked
  1879  0018E0  0101               	movlb	1	; () banked
  1880  0018E2  6710               	tstfsz	((LCD_Out@i))&0ffh
  1881  0018E4  D001               	goto	u2851
  1882  0018E6  D001               	goto	u2850
  1883  0018E8                     u2851:
  1884  0018E8  D001               	goto	l146
  1885  0018EA                     u2850:
  1886  0018EA  D01E               	goto	l147
  1887                           	
  1888  0018EC                     l146:		; BSR set to: ?
  1889                           
  1890                           	line	53
  1891                           ;Main.c: 53: LCD_Write(A[i-1]+48);
  1892  0018EC  C110  F115         	movff	(LCD_Out@i),??_LCD_Out+5+0
  1893  0018F0  0EFF               	movlw	-1
  1894  0018F2  0101               	movlb	1	; () banked
  1895  0018F4  2715               	addwf	(??_LCD_Out+5+0)&0ffh
  1896  0018F6  0101               	movlb	1	; () banked
  1897  0018F8  0E11               	movlw	low(LCD_Out@A)
  1898  0018FA  0101               	movlb	1	; () banked
  1899  0018FC  2515               	addwf	(??_LCD_Out+5+0)&0ffh,w
  1900  0018FE  6EE9               	movwf	c:fsr0l
  1901  001900  6AEA               	clrf	1+c:fsr0l
  1902  001902  0101               	movlb	1	; () banked
  1903  001904  0E01               	movlw	high(LCD_Out@A)
  1904  001906  22EA               	addwfc	1+c:fsr0l
  1905  001908  50EF               	movf	indf0,w
  1906  00190A  0F30               	addlw	low(030h)
  1907  00190C  0101               	movlb	1	; () banked
  1908  00190E  0101               	movlb	1	; () banked
  1909  001910  6F16               	movwf	((?_LCD_Write))&0ffh
  1910  001912  EC65  F00F         	call	_LCD_Write	;wreg free
  1911                           	line	52
  1912  001916  0101               	movlb	1	; () banked
  1913  001918  0101               	movlb	1	; () banked
  1914  00191A  0710               	decf	((LCD_Out@i))&0ffh
  1915  00191C  0101               	movlb	1	; () banked
  1916  00191E  0101               	movlb	1	; () banked
  1917  001920  6710               	tstfsz	((LCD_Out@i))&0ffh
  1918  001922  D001               	goto	u2861
  1919  001924  D001               	goto	u2860
  1920  001926                     u2861:
  1921  001926  D7E2               	goto	l146
  1922  001928                     u2860:
  1923                           	
  1924  001928                     l147:		; BSR set to: ?
  1925                           
  1926                           	line	55
  1927                           ;Main.c: 54: }
  1928                           ;Main.c: 55: }
  1929  001928                     l142:
  1930                           			; BSR set to: ?
  1931                           
  1932  001928  0012               	return
  1933                           	opt stack 0
  1934                           GLOBAL __end_of_LCD_Out
  1935  00192A                     	__end_of_LCD_Out:
  1936                           	FNSIZE	_LCD_Out,6,2
  1937                           ; =============== function _LCD_Out ends =======
                                 =====
  1938                           
  1939                           	signat	_LCD_Out,4216
  1940                           	global	___lwmod
  1941                           	global	??___lwmod
  1942                           	global	?___lwmod
  1943                                   psect   text6,class=CODE,space=0,reloc=2
  1944                           
  1945                           	opt lm
  1946                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\lwmod.c"
  1947                           	line	5
  1948  000000                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1949                           	
  1950  001B6C                     ___lwmod:		; BSR set to: ?
  1951                           
  1952                           	opt stack 28
  1953                           	line	8
  1954  001B6C  0101               	movlb	1	; () banked
  1955  001B6E  0101               	movlb	1	; () banked
  1956  001B70  5119               	movf	((___lwmod@divisor+1))&0ffh,w
  1957  001B72  1118               	iorwf ((___lwmod@divisor))&0ffh,w
  1958                           
  1959  001B74  B4D8               	btfsc	status,2
  1960  001B76  D001               	goto	u2871
  1961  001B78  D001               	goto	u2870
  1962  001B7A                     u2871:
  1963  001B7A  D03E               	goto	l539
  1964  001B7C                     u2870:
  1965                           	line	9
  1966  001B7C  0101               	movlb	1	; () banked
  1967  001B7E  6F1B               	movwf	(??___lwmod+1+0)&0ffh
  1968  001B80  0E01               	movlw	low(01h)
  1969  001B82  0101               	movlb	1	; () banked
  1970  001B84  0101               	movlb	1	; () banked
  1971  001B86  6F1A               	movwf	((___lwmod@counter))&0ffh
  1972  001B88  0101               	movlb	1	; () banked
  1973  001B8A  511B               	movf	(??___lwmod+1+0)&0ffh,w
  1974                           	line	10
  1975  001B8C  D009               	goto	l540
  1976                           	
  1977  001B8E                     l541:		; BSR set to: ?
  1978                           
  1979                           	line	11
  1980  001B8E  0101               	movlb	1	; () banked
  1981  001B90  90D8               	bcf	status,0
  1982  001B92  0101               	movlb	1	; () banked
  1983  001B94  3718               	rlcf	((___lwmod@divisor))&0ffh
  1984  001B96  0101               	movlb	1	; () banked
  1985  001B98  3719               	rlcf	((___lwmod@divisor+1))&0ffh
  1986                           	line	12
  1987  001B9A  0101               	movlb	1	; () banked
  1988  001B9C  0101               	movlb	1	; () banked
  1989  001B9E  2B1A               	incf	((___lwmod@counter))&0ffh
  1990                           	line	13
  1991                           	
  1992  001BA0                     l540:		; BSR set to: ?
  1993                           
  1994                           	line	10
  1995  001BA0  0101               	movlb	1	; () banked
  1996                           	
  1997  001BA2  0101               	movlb	1	; () banked
  1998  001BA4  AF19               	btfss	((___lwmod@divisor+1))&0ffh,(15)&7
  1999  001BA6  D001               	goto	u2881
  2000  001BA8  D001               	goto	u2880
  2001  001BAA                     u2881:
  2002  001BAA  D7F1               	goto	l541
  2003  001BAC                     u2880:
  2004                           	
  2005  001BAC                     l542:		; BSR set to: ?
  2006                           
  2007                           	line	14
  2008                           	
  2009  001BAC                     l545:		; BSR set to: ?
  2010                           
  2011                           	line	15
  2012  001BAC  0101               	movlb	1	; () banked
  2013  001BAE  0101               	movlb	1	; () banked
  2014  001BB0  5118               	movf	((___lwmod@divisor))&0ffh,w
  2015  001BB2  0101               	movlb	1	; () banked
  2016  001BB4  0101               	movlb	1	; () banked
  2017  001BB6  5D16               	subwf	((___lwmod@dividend))&0ffh,w
  2018  001BB8  0101               	movlb	1	; () banked
  2019  001BBA  0101               	movlb	1	; () banked
  2020  001BBC  5119               	movf	((___lwmod@divisor+1))&0ffh,w
  2021  001BBE  0101               	movlb	1	; () banked
  2022  001BC0  0101               	movlb	1	; () banked
  2023  001BC2  5917               	subwfb	((___lwmod@dividend+1))&0ffh,w
  2024  001BC4  A0D8               	btfss	status,0
  2025  001BC6  D001               	goto	u2891
  2026  001BC8  D001               	goto	u2890
  2027  001BCA                     u2891:
  2028  001BCA  D00C               	goto	l546
  2029  001BCC                     u2890:
  2030                           	line	16
  2031  001BCC  0101               	movlb	1	; () banked
  2032  001BCE  0101               	movlb	1	; () banked
  2033  001BD0  5118               	movf	((___lwmod@divisor))&0ffh,w
  2034  001BD2  0101               	movlb	1	; () banked
  2035  001BD4  0101               	movlb	1	; () banked
  2036  001BD6  5F16               	subwf	((___lwmod@dividend))&0ffh
  2037  001BD8  0101               	movlb	1	; () banked
  2038  001BDA  0101               	movlb	1	; () banked
  2039  001BDC  5119               	movf	((___lwmod@divisor+1))&0ffh,w
  2040  001BDE  0101               	movlb	1	; () banked
  2041  001BE0  0101               	movlb	1	; () banked
  2042  001BE2  5B17               	subwfb	((___lwmod@dividend+1))&0ffh
  2043                           
  2044                           	
  2045  001BE4                     l546:		; BSR set to: ?
  2046                           
  2047                           	line	17
  2048  001BE4  0101               	movlb	1	; () banked
  2049  001BE6  90D8               	bcf	status,0
  2050  001BE8  0101               	movlb	1	; () banked
  2051  001BEA  3319               	rrcf	((___lwmod@divisor+1))&0ffh
  2052  001BEC  0101               	movlb	1	; () banked
  2053  001BEE  3318               	rrcf	((___lwmod@divisor))&0ffh
  2054                           	line	18
  2055  001BF0  0101               	movlb	1	; () banked
  2056  001BF2  0101               	movlb	1	; () banked
  2057  001BF4  2F1A               	decfsz	((___lwmod@counter))&0ffh
  2058                           	
  2059  001BF6  D7DA               	goto	l545
  2060                           	
  2061  001BF8                     l544:		; BSR set to: ?
  2062                           
  2063                           	line	19
  2064                           	
  2065  001BF8                     l539:		; BSR set to: ?
  2066                           
  2067                           	line	20
  2068  001BF8  C116  F116         	movff	(___lwmod@dividend),(?___lwmod)
  2069  001BFC  C117  F117         	movff	(___lwmod@dividend+1),(?___lwmod+1)
  2070  001C00  D000               	goto	l538
  2071                           	line	21
  2072  001C02                     l538:
  2073                           			; BSR set to: ?
  2074                           
  2075  001C02  0012               	return
  2076                           	opt stack 0
  2077                           GLOBAL __end_of___lwmod
  2078  001C04                     	__end_of___lwmod:
  2079                           	FNSIZE	___lwmod,2,4
  2080                           ; =============== function ___lwmod ends =======
                                 =====
  2081                           
  2082                           	signat	___lwmod,8314
  2083                           	global	_RandomColor
  2084                           	global	??_RandomColor
  2085                           	global	?_RandomColor
  2086                                   psect   text7,class=CODE,space=0,reloc=2
  2087                           
  2088                           	opt lm
  2089                           	file	"Main.c"
  2090                           	line	93
  2091  000000                     	__size_of_RandomColor	equ	__end_of_RandomColor-
                                 _RandomColor
  2092                           ;Main.c: 92: void RandomColor()
  2093                           ;Main.c: 93: {
  2094                           	
  2095  001F74                     _RandomColor:		; BSR set to: ?
  2096                           
  2097                           	opt stack 28
  2098                           	line	94
  2099  001F74  EC02  F00E         	call	_rand	;wreg free
  2100  001F78  0101               	movlb	1	; () banked
  2101  001F7A  0101               	movlb	1	; () banked
  2102  001F7C  5114               	movf	(0+?_rand)&0ffh,w
  2103  001F7E  6E19               	movwf	((c:25)),c
  2104  001F80  6A1A               	clrf	((c:25+1)),c
  2105                           	line	95
  2106                           ;Main.c: 95: G1 = rand()%256;
  2107  001F82  EC02  F00E         	call	_rand	;wreg free
  2108  001F86  0101               	movlb	1	; () banked
  2109  001F88  0101               	movlb	1	; () banked
  2110  001F8A  5114               	movf	(0+?_rand)&0ffh,w
  2111  001F8C  6E0F               	movwf	((c:15)),c
  2112  001F8E  6A10               	clrf	((c:15+1)),c
  2113                           	line	96
  2114                           ;Main.c: 96: B1 = rand()%256;
  2115  001F90  EC02  F00E         	call	_rand	;wreg free
  2116  001F94  0101               	movlb	1	; () banked
  2117  001F96  0101               	movlb	1	; () banked
  2118  001F98  5114               	movf	(0+?_rand)&0ffh,w
  2119  001F9A  6E11               	movwf	((c:17)),c
  2120  001F9C  6A12               	clrf	((c:17+1)),c
  2121                           	line	97
  2122                           ;Main.c: 97: }
  2123  001F9E                     l156:
  2124                           			; BSR set to: ?
  2125                           
  2126  001F9E  0012               	return
  2127                           	opt stack 0
  2128                           GLOBAL __end_of_RandomColor
  2129  001FA0                     	__end_of_RandomColor:
  2130                           	FNSIZE	_RandomColor,0,0
  2131                           ; =============== function _RandomColor ends ===
                                 =========
  2132                           
  2133                           	signat	_RandomColor,88
  2134                           	global	___lwdiv
  2135                           	global	??___lwdiv
  2136                           	global	?___lwdiv
  2137                                   psect   text8,class=CODE,space=0,reloc=2
  2138                           
  2139                           	opt lm
  2140                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\lwdiv.c"
  2141                           	line	5
  2142  000000                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2143                           	
  2144  001A10                     ___lwdiv:		; BSR set to: ?
  2145                           
  2146                           	opt stack 28
  2147                           	line	9
  2148  001A10  0E00               	movlw	low(0)
  2149  001A12  0101               	movlb	1	; () banked
  2150  001A14  0101               	movlb	1	; () banked
  2151  001A16  6F1B               	movwf	((___lwdiv@quotient))&0ffh
  2152  001A18  0E00               	movlw	high(0)
  2153  001A1A  0101               	movlb	1	; () banked
  2154  001A1C  6F1C               	movwf	((___lwdiv@quotient+1))&0ffh
  2155                           	line	10
  2156  001A1E  0101               	movlb	1	; () banked
  2157  001A20  0101               	movlb	1	; () banked
  2158  001A22  5119               	movf	((___lwdiv@divisor+1))&0ffh,w
  2159  001A24  1118               	iorwf ((___lwdiv@divisor))&0ffh,w
  2160                           
  2161  001A26  B4D8               	btfsc	status,2
  2162  001A28  D001               	goto	u2901
  2163  001A2A  D001               	goto	u2900
  2164  001A2C                     u2901:
  2165  001A2C  D047               	goto	l530
  2166  001A2E                     u2900:
  2167                           	line	11
  2168  001A2E  0101               	movlb	1	; () banked
  2169  001A30  6F1D               	movwf	(??___lwdiv+3+0)&0ffh
  2170  001A32  0E01               	movlw	low(01h)
  2171  001A34  0101               	movlb	1	; () banked
  2172  001A36  0101               	movlb	1	; () banked
  2173  001A38  6F1A               	movwf	((___lwdiv@counter))&0ffh
  2174  001A3A  0101               	movlb	1	; () banked
  2175  001A3C  511D               	movf	(??___lwdiv+3+0)&0ffh,w
  2176                           	line	12
  2177  001A3E  D009               	goto	l531
  2178                           	
  2179  001A40                     l532:		; BSR set to: ?
  2180                           
  2181                           	line	13
  2182  001A40  0101               	movlb	1	; () banked
  2183  001A42  90D8               	bcf	status,0
  2184  001A44  0101               	movlb	1	; () banked
  2185  001A46  3718               	rlcf	((___lwdiv@divisor))&0ffh
  2186  001A48  0101               	movlb	1	; () banked
  2187  001A4A  3719               	rlcf	((___lwdiv@divisor+1))&0ffh
  2188                           	line	14
  2189  001A4C  0101               	movlb	1	; () banked
  2190  001A4E  0101               	movlb	1	; () banked
  2191  001A50  2B1A               	incf	((___lwdiv@counter))&0ffh
  2192                           	line	15
  2193                           	
  2194  001A52                     l531:		; BSR set to: ?
  2195                           
  2196                           	line	12
  2197  001A52  0101               	movlb	1	; () banked
  2198                           	
  2199  001A54  0101               	movlb	1	; () banked
  2200  001A56  AF19               	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
  2201  001A58  D001               	goto	u2911
  2202  001A5A  D001               	goto	u2910
  2203  001A5C                     u2911:
  2204  001A5C  D7F1               	goto	l532
  2205  001A5E                     u2910:
  2206                           	
  2207  001A5E                     l533:		; BSR set to: ?
  2208                           
  2209                           	line	16
  2210                           	
  2211  001A5E                     l536:		; BSR set to: ?
  2212                           
  2213                           	line	17
  2214  001A5E  0101               	movlb	1	; () banked
  2215  001A60  90D8               	bcf	status,0
  2216  001A62  0101               	movlb	1	; () banked
  2217  001A64  371B               	rlcf	((___lwdiv@quotient))&0ffh
  2218  001A66  0101               	movlb	1	; () banked
  2219  001A68  371C               	rlcf	((___lwdiv@quotient+1))&0ffh
  2220                           	line	18
  2221  001A6A  0101               	movlb	1	; () banked
  2222  001A6C  0101               	movlb	1	; () banked
  2223  001A6E  5118               	movf	((___lwdiv@divisor))&0ffh,w
  2224  001A70  0101               	movlb	1	; () banked
  2225  001A72  0101               	movlb	1	; () banked
  2226  001A74  5D16               	subwf	((___lwdiv@dividend))&0ffh,w
  2227  001A76  0101               	movlb	1	; () banked
  2228  001A78  0101               	movlb	1	; () banked
  2229  001A7A  5119               	movf	((___lwdiv@divisor+1))&0ffh,w
  2230  001A7C  0101               	movlb	1	; () banked
  2231  001A7E  0101               	movlb	1	; () banked
  2232  001A80  5917               	subwfb	((___lwdiv@dividend+1))&0ffh,w
  2233  001A82  A0D8               	btfss	status,0
  2234  001A84  D001               	goto	u2921
  2235  001A86  D001               	goto	u2920
  2236  001A88                     u2921:
  2237  001A88  D00F               	goto	l537
  2238  001A8A                     u2920:
  2239                           	line	19
  2240  001A8A  0101               	movlb	1	; () banked
  2241  001A8C  0101               	movlb	1	; () banked
  2242  001A8E  5118               	movf	((___lwdiv@divisor))&0ffh,w
  2243  001A90  0101               	movlb	1	; () banked
  2244  001A92  0101               	movlb	1	; () banked
  2245  001A94  5F16               	subwf	((___lwdiv@dividend))&0ffh
  2246  001A96  0101               	movlb	1	; () banked
  2247  001A98  0101               	movlb	1	; () banked
  2248  001A9A  5119               	movf	((___lwdiv@divisor+1))&0ffh,w
  2249  001A9C  0101               	movlb	1	; () banked
  2250  001A9E  0101               	movlb	1	; () banked
  2251  001AA0  5B17               	subwfb	((___lwdiv@dividend+1))&0ffh
  2252                           
  2253                           	line	20
  2254  001AA2  0101               	movlb	1	; () banked
  2255  001AA4  0101               	movlb	1	; () banked
  2256  001AA6  811B               	bsf	(0+(0/8)+(___lwdiv@quotient))&0ffh,(0)&7
  2257                           	line	21
  2258                           	
  2259  001AA8                     l537:		; BSR set to: ?
  2260                           
  2261                           	line	22
  2262  001AA8  0101               	movlb	1	; () banked
  2263  001AAA  90D8               	bcf	status,0
  2264  001AAC  0101               	movlb	1	; () banked
  2265  001AAE  3319               	rrcf	((___lwdiv@divisor+1))&0ffh
  2266  001AB0  0101               	movlb	1	; () banked
  2267  001AB2  3318               	rrcf	((___lwdiv@divisor))&0ffh
  2268                           	line	23
  2269  001AB4  0101               	movlb	1	; () banked
  2270  001AB6  0101               	movlb	1	; () banked
  2271  001AB8  2F1A               	decfsz	((___lwdiv@counter))&0ffh
  2272                           	
  2273  001ABA  D7D1               	goto	l536
  2274                           	
  2275  001ABC                     l535:		; BSR set to: ?
  2276                           
  2277                           	line	24
  2278                           	
  2279  001ABC                     l530:		; BSR set to: ?
  2280                           
  2281                           	line	25
  2282  001ABC  C11B  F116         	movff	(___lwdiv@quotient),(?___lwdiv)
  2283  001AC0  C11C  F117         	movff	(___lwdiv@quotient+1),(?___lwdiv+1)
  2284  001AC4  D000               	goto	l529
  2285                           	line	26
  2286  001AC6                     l529:
  2287                           			; BSR set to: ?
  2288                           
  2289  001AC6  0012               	return
  2290                           	opt stack 0
  2291                           GLOBAL __end_of___lwdiv
  2292  001AC8                     	__end_of___lwdiv:
  2293                           	FNSIZE	___lwdiv,4,4
  2294                           ; =============== function ___lwdiv ends =======
                                 =====
  2295                           
  2296                           	signat	___lwdiv,8314
  2297                           	global	_abs
  2298                           	global	??_abs
  2299                           	global	?_abs
  2300                                   psect   text9,class=CODE,space=0,reloc=2
  2301                           
  2302                           	opt lm
  2303                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\abs.c"
  2304                           	line	5
  2305  000000                     	__size_of_abs	equ	__end_of_abs-_abs
  2306                           	
  2307  001F06                     _abs:		; BSR set to: ?
  2308                           
  2309                           	opt stack 28
  2310                           	line	6
  2311  001F06  0101               	movlb	1	; () banked
  2312  001F08  0101               	movlb	1	; () banked
  2313  001F0A  AF17               	btfss	((abs@a+1))&0ffh,7
  2314  001F0C  D001               	goto	u2931
  2315  001F0E  D001               	goto	u2930
  2316  001F10                     u2931:
  2317  001F10  D010               	goto	l212
  2318  001F12                     u2930:
  2319                           	line	7
  2320  001F12  0101               	movlb	1	; () banked
  2321  001F14  C116  F118         	movff	(abs@a),??_abs+0+0
  2322  001F18  0101               	movlb	1	; () banked
  2323  001F1A  C117  F119         	movff	(abs@a+1),??_abs+0+0+1
  2324  001F1E  0101               	movlb	1	; () banked
  2325  001F20  1F18               	comf	(??_abs+0+0)&0ffh
  2326  001F22  1F19               	comf	(??_abs+0+1)&0ffh
  2327  001F24  4B18               	infsnz	(??_abs+0+0)&0ffh
  2328  001F26  2B19               	incf	(??_abs+0+1)&0ffh
  2329  001F28  C118  F116         	movff	??_abs+0+0,(?_abs)
  2330  001F2C  C119  F117         	movff	??_abs+0+1,(?_abs+1)
  2331  001F30  D005               	goto	l211
  2332                           	
  2333  001F32                     l212:		; BSR set to: ?
  2334                           
  2335                           	line	8
  2336  001F32  C116  F116         	movff	(abs@a),(?_abs)
  2337  001F36  C117  F117         	movff	(abs@a+1),(?_abs+1)
  2338  001F3A  D000               	goto	l211
  2339                           	line	9
  2340  001F3C                     l211:
  2341                           			; BSR set to: ?
  2342                           
  2343  001F3C  0012               	return
  2344                           	opt stack 0
  2345                           GLOBAL __end_of_abs
  2346  001F3E                     	__end_of_abs:
  2347                           	FNSIZE	_abs,2,2
  2348                           ; =============== function _abs ends ===========
                                 =
  2349                           
  2350                           	signat	_abs,4218
  2351                           	global	_LCD_Write
  2352                           	global	??_LCD_Write
  2353                           	global	?_LCD_Write
  2354                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  2355                           
  2356                           	opt lm
  2357                           	file	"LCD_PortD.c"
  2358                           	line	62
  2359  000000                     	__size_of_LCD_Write	equ	__end_of_LCD_Write-_LCD
                                 _Write
  2360                           ;LCD_PortD.c: 61: void LCD_Write(unsigned char c
                                 )
  2361                           ;LCD_PortD.c: 62: {
  2362                           	
  2363  001ECA                     _LCD_Write:		; BSR set to: ?
  2364                           
  2365                           	opt stack 28
  2366                           	line	63
  2367  001ECA  8483               	bsf	c:(31770/8),(31770)&7	;volatile
  2368                           	line	64
  2369                           ;LCD_PortD.c: 64: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
  2370  001ECC  C116  F117         	movff	(LCD_Write@c),??_LCD_Write+0+0
  2371  001ED0  0EF0               	movlw	0F0h
  2372  001ED2  0101               	movlb	1	; () banked
  2373  001ED4  1717               	andwf	(??_LCD_Write+0+0)&0ffh
  2374  001ED6  5083               	movf	((c:3971)),c,w	;volatile
  2375  001ED8  0B0F               	andlw	low(0Fh)
  2376  001EDA  0101               	movlb	1	; () banked
  2377  001EDC  1117               	iorwf	(??_LCD_Write+0+0)&0ffh,w
  2378  001EDE  6E83               	movwf	((c:3971)),c	;volatile
  2379                           	line	65
  2380                           ;LCD_PortD.c: 65: LCD_Strobe();
  2381  001EE0  ECDF  F00F         	call	_LCD_Strobe	;wreg free
  2382                           	line	66
  2383                           ;LCD_PortD.c: 66: PORTD = (PORTD & 0x0F) | ((c<<
                                 4) & 0xF0);
  2384  001EE4  C116  F117         	movff	(LCD_Write@c),??_LCD_Write+0+0
  2385  001EE8  0101               	movlb	1	; () banked
  2386  001EEA  3B17               	swapf	(??_LCD_Write+0+0)&0ffh
  2387  001EEC  0EF0               	movlw	(0ffh shl 4) & 0ffh
  2388  001EEE  1717               	andwf	(??_LCD_Write+0+0)&0ffh
  2389  001EF0  0EF0               	movlw	0F0h
  2390  001EF2  0101               	movlb	1	; () banked
  2391  001EF4  1717               	andwf	(??_LCD_Write+0+0)&0ffh
  2392  001EF6  5083               	movf	((c:3971)),c,w	;volatile
  2393  001EF8  0B0F               	andlw	low(0Fh)
  2394  001EFA  0101               	movlb	1	; () banked
  2395  001EFC  1117               	iorwf	(??_LCD_Write+0+0)&0ffh,w
  2396  001EFE  6E83               	movwf	((c:3971)),c	;volatile
  2397                           	line	67
  2398                           ;LCD_PortD.c: 67: LCD_Strobe();
  2399  001F00  ECDF  F00F         	call	_LCD_Strobe	;wreg free
  2400                           	line	69
  2401                           ;LCD_PortD.c: 69: }
  2402  001F04                     l133:
  2403                           			; BSR set to: ?
  2404                           
  2405  001F04  0012               	return
  2406                           	opt stack 0
  2407                           GLOBAL __end_of_LCD_Write
  2408  001F06                     	__end_of_LCD_Write:
  2409                           	FNSIZE	_LCD_Write,1,1
  2410                           ; =============== function _LCD_Write ends =====
                                 =======
  2411                           
  2412                           	signat	_LCD_Write,4216
  2413                           	global	_LCD_Move
  2414                           	global	??_LCD_Move
  2415                           	global	?_LCD_Move
  2416                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  2417                           
  2418                           	opt lm
  2419                           	file	"LCD_PortD.c"
  2420                           	line	54
  2421  000000                     	__size_of_LCD_Move	equ	__end_of_LCD_Move-_LCD_M
                                 ove
  2422                           ;LCD_PortD.c: 53: void LCD_Move(unsigned char Ro
                                 w, unsigned char Col)
  2423                           ;LCD_PortD.c: 54: {
  2424                           	
  2425  001C8A                     _LCD_Move:		; BSR set to: ?
  2426                           
  2427                           	opt stack 28
  2428                           	line	55
  2429                           ;LCD_PortD.c: 55: if (Row == 0) LCD_Inst(0x80 + 
                                 Col);
  2430  001C8A  0101               	movlb	1	; () banked
  2431  001C8C  0101               	movlb	1	; () banked
  2432  001C8E  6714               	tstfsz	((LCD_Move@Row))&0ffh
  2433  001C90  D001               	goto	u2941
  2434  001C92  D001               	goto	u2940
  2435  001C94                     u2941:
  2436  001C94  D009               	goto	l129
  2437  001C96                     u2940:
  2438  001C96  0101               	movlb	1	; () banked
  2439  001C98  0101               	movlb	1	; () banked
  2440  001C9A  5115               	movf	((LCD_Move@Col))&0ffh,w
  2441  001C9C  0F80               	addlw	low(080h)
  2442  001C9E  0101               	movlb	1	; () banked
  2443  001CA0  0101               	movlb	1	; () banked
  2444  001CA2  6F16               	movwf	((?_LCD_Inst))&0ffh
  2445  001CA4  EC3E  F00F         	call	_LCD_Inst	;wreg free
  2446                           	
  2447  001CA8                     l129:		; BSR set to: ?
  2448                           
  2449                           	line	56
  2450                           ;LCD_PortD.c: 56: if (Row == 1) LCD_Inst(0xC0 + 
                                 Col);
  2451  001CA8  0101               	movlb	1	; () banked
  2452  001CAA  0101               	movlb	1	; () banked
  2453  001CAC  0514               	decf	((LCD_Move@Row))&0ffh,w
  2454                           
  2455  001CAE  A4D8               	btfss	status,2
  2456  001CB0  D001               	goto	u2951
  2457  001CB2  D001               	goto	u2950
  2458  001CB4                     u2951:
  2459  001CB4  D009               	goto	l130
  2460  001CB6                     u2950:
  2461  001CB6  0101               	movlb	1	; () banked
  2462  001CB8  0101               	movlb	1	; () banked
  2463  001CBA  5115               	movf	((LCD_Move@Col))&0ffh,w
  2464  001CBC  0FC0               	addlw	low(0C0h)
  2465  001CBE  0101               	movlb	1	; () banked
  2466  001CC0  0101               	movlb	1	; () banked
  2467  001CC2  6F16               	movwf	((?_LCD_Inst))&0ffh
  2468  001CC4  EC3E  F00F         	call	_LCD_Inst	;wreg free
  2469                           	
  2470  001CC8                     l130:		; BSR set to: ?
  2471                           
  2472                           	line	57
  2473                           ;LCD_PortD.c: 57: if (Row == 2) LCD_Inst(0x94 + 
                                 Col);
  2474  001CC8  0101               	movlb	1	; () banked
  2475  001CCA  0101               	movlb	1	; () banked
  2476  001CCC  5114               	movf	((LCD_Move@Row))&0ffh,w
  2477  001CCE  0A02               	xorlw	2
  2478                           
  2479  001CD0  A4D8               	btfss	status,2
  2480  001CD2  D001               	goto	u2961
  2481  001CD4  D001               	goto	u2960
  2482  001CD6                     u2961:
  2483  001CD6  D009               	goto	l131
  2484  001CD8                     u2960:
  2485  001CD8  0101               	movlb	1	; () banked
  2486  001CDA  0101               	movlb	1	; () banked
  2487  001CDC  5115               	movf	((LCD_Move@Col))&0ffh,w
  2488  001CDE  0F94               	addlw	low(094h)
  2489  001CE0  0101               	movlb	1	; () banked
  2490  001CE2  0101               	movlb	1	; () banked
  2491  001CE4  6F16               	movwf	((?_LCD_Inst))&0ffh
  2492  001CE6  EC3E  F00F         	call	_LCD_Inst	;wreg free
  2493                           	
  2494  001CEA                     l131:		; BSR set to: ?
  2495                           
  2496                           	line	58
  2497                           ;LCD_PortD.c: 58: if (Row == 3) LCD_Inst(0xD4 + 
                                 Col);
  2498  001CEA  0101               	movlb	1	; () banked
  2499  001CEC  0101               	movlb	1	; () banked
  2500  001CEE  5114               	movf	((LCD_Move@Row))&0ffh,w
  2501  001CF0  0A03               	xorlw	3
  2502                           
  2503  001CF2  A4D8               	btfss	status,2
  2504  001CF4  D001               	goto	u2971
  2505  001CF6  D001               	goto	u2970
  2506  001CF8                     u2971:
  2507  001CF8  D009               	goto	l132
  2508  001CFA                     u2970:
  2509  001CFA  0101               	movlb	1	; () banked
  2510  001CFC  0101               	movlb	1	; () banked
  2511  001CFE  5115               	movf	((LCD_Move@Col))&0ffh,w
  2512  001D00  0FD4               	addlw	low(0D4h)
  2513  001D02  0101               	movlb	1	; () banked
  2514  001D04  0101               	movlb	1	; () banked
  2515  001D06  6F16               	movwf	((?_LCD_Inst))&0ffh
  2516  001D08  EC3E  F00F         	call	_LCD_Inst	;wreg free
  2517                           	
  2518  001D0C                     l132:		; BSR set to: ?
  2519                           
  2520                           	line	59
  2521                           ;LCD_PortD.c: 59: }
  2522  001D0C                     l128:
  2523                           			; BSR set to: ?
  2524                           
  2525  001D0C  0012               	return
  2526                           	opt stack 0
  2527                           GLOBAL __end_of_LCD_Move
  2528  001D0E                     	__end_of_LCD_Move:
  2529                           	FNSIZE	_LCD_Move,0,2
  2530                           ; =============== function _LCD_Move ends ======
                                 ======
  2531                           
  2532                           	signat	_LCD_Move,8312
  2533                           	global	_LCD_Inst
  2534                           	global	??_LCD_Inst
  2535                           	global	?_LCD_Inst
  2536                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  2537                           
  2538                           	opt lm
  2539                           	file	"LCD_PortD.c"
  2540                           	line	44
  2541  000000                     	__size_of_LCD_Inst	equ	__end_of_LCD_Inst-_LCD_I
                                 nst
  2542                           ;LCD_PortD.c: 43: void LCD_Inst(unsigned char c)
  2543                           ;LCD_PortD.c: 44: {
  2544                           	
  2545  001E7C                     _LCD_Inst:		; BSR set to: ?
  2546                           
  2547                           	opt stack 27
  2548                           	line	45
  2549  001E7C  9483               	bcf	c:(31770/8),(31770)&7	;volatile
  2550                           	line	46
  2551                           ;LCD_PortD.c: 46: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
  2552  001E7E  C116  F117         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  2553  001E82  0EF0               	movlw	0F0h
  2554+ 001E84  0101               	movlb	1	; () banked
  2555+ 001E86  1717               	andwf	(??_LCD_Inst+0+0)&0ffh
  2556+ 001E88  5083               	movf	((c:3971)),c,w	;volatile
  2557+ 001E8A  0B0F               	andlw	low(0Fh)
  2558+ 001E8C  0101               	movlb	1	; () banked
  2559+ 001E8E  1117               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  2560+ 001E90  6E83               	movwf	((c:3971)),c	;volatile
  2561+                          	line	47
  2562+                          ;LCD_PortD.c: 47: LCD_Strobe();
  2563+ 001E92  ECDF  F00F         	call	_LCD_Strobe	;wreg free
  2564+                          	line	48
  2565+                          ;LCD_PortD.c: 48: PORTD = (PORTD & 0x0F) | ((c<<
      +                          4) & 0xF0);
  2566+ 001E96  C116  F117         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  2567+ 001E9A  0101               	movlb	1	; () banked
  2568+ 001E9C  3B17               	swapf	(??_LCD_Inst+0+0)&0ffh
  2569+ 001E9E  0EF0               	movlw	(0ffh shl 4) & 0ffh
  2570+ 001EA0  1717               	andwf	(??_LCD_Inst+0+0)&0ffh
  2571+ 001EA2  0EF0               	movlw	0F0h
  2572+ 001EA4  0101               	movlb	1	; () banked
  2573+ 001EA6  1717               	andwf	(??_LCD_Inst+0+0)&0ffh
  2574+ 001EA8  5083               	movf	((c:3971)),c,w	;volatile
  2575+ 001EAA  0B0F               	andlw	low(0Fh)
  2576+ 001EAC  0101               	movlb	1	; () banked
  2577+ 001EAE  1117               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  2578+ 001EB0  6E83               	movwf	((c:3971)),c	;volatile
  2579+                          	line	49
  2580+                          ;LCD_PortD.c: 49: LCD_Strobe();
  2581+ 001EB2  ECDF  F00F         	call	_LCD_Strobe	;wreg free
  2582+                          	line	50
  2583+                          ;LCD_PortD.c: 50: Wait_ms(10);
  2584+ 001EB6  0E0A               	movlw	low(0Ah)
  2585+ 001EB8  0101               	movlb	1	; () banked
  2586+ 001EBA  0101               	movlb	1	; () banked
  2587+ 001EBC  6F18               	movwf	((?_Wait_ms))&0ffh
  2588+ 001EBE  0E00               	movlw	high(0Ah)
  2589+ 001EC0  0101               	movlb	1	; () banked
  2590+ 001EC2  6F19               	movwf	((?_Wait_ms+1))&0ffh
  2591+ 001EC4  ECC7  F00E         	call	_Wait_ms	;wreg free
  2592+                          	line	51
  2593+                          ;LCD_PortD.c: 51: }
  2594+ 001EC8                     l127:
  2595+                          			; BSR set to: ?
  2596+                          
  2597+ 001EC8  0012               	return
  2598+                          	opt stack 0
  2599+                          GLOBAL __end_of_LCD_Inst
  2600+ 001ECA                     	__end_of_LCD_Inst:
  2601+                          	FNSIZE	_LCD_Inst,1,1
  2602+                          ; =============== function _LCD_Inst ends ======
      +                          ======
  2603+                          
  2604+                          	signat	_LCD_Inst,4216
  2605+                          	global	_rand
  2606+                          	global	??_rand
  2607+                          	global	?_rand
  2608+                                  psect   text13,class=CODE,space=0,reloc=
      +                          2
  2609+                          
  2610+                          	opt lm
  2611+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.63\sources\rand.c"
  2612+                          	line	14
  2613+ 000000                     	__size_of_rand	equ	__end_of_rand-_rand
  2614+                          	
  2615+ 001C04                     _rand:		; BSR set to: ?
  2616+                          
  2617+                          	opt stack 27
  2618+                          	line	15
  2619+ 001C04  6608               	tstfsz	((c:8)),c
  2620+ 001C06  D001               	goto	u2981
  2621+ 001C08  D001               	goto	u2980
  2622+ 001C0A                     u2981:
  2623+ 001C0A  D009               	goto	l219
  2624+ 001C0C                     u2980:
  2625+                          	line	16
  2626+ 001C0C  0E01               	movlw	low(01h)
  2627+ 001C0E  0101               	movlb	1	; () banked
  2628+ 001C10  0101               	movlb	1	; () banked
  2629+ 001C12  6F16               	movwf	((?_srand))&0ffh
  2630+ 001C14  0E00               	movlw	high(01h)
  2631+ 001C16  0101               	movlb	1	; () banked
  2632+ 001C18  6F17               	movwf	((?_srand+1))&0ffh
  2633+ 001C1A  ECD0  F00F         	call	_srand	;wreg free
  2634+                          	
  2635+ 001C1E                     l219:		; BSR set to: ?
  2636+                          
  2637+                          	line	17
  2638+ 001C1E  0E6D               	movlw	low(041C64E6Dh)
  2639+ 001C20  0101               	movlb	1	; () banked
  2640+ 001C22  0101               	movlb	1	; () banked
  2641+ 001C24  6F1A               	movwf	(0+(?___lmul+04h))&0ffh
  2642+ 001C26  0E4E               	movlw	high(041C64E6Dh)
  2643+ 001C28  0101               	movlb	1	; () banked
  2644+ 001C2A  6F1B               	movwf	(1+(?___lmul+04h))&0ffh
  2645+ 001C2C  0EC6               	movlw	low highword(041C64E6Dh)
  2646+ 001C2E  0101               	movlb	1	; () banked
  2647+ 001C30  6F1C               	movwf	(2+(?___lmul+04h))&0ffh
  2648+ 001C32  0E41               	movlw	high highword(041C64E6Dh)
  2649+ 001C34  0101               	movlb	1	; () banked
  2650+ 001C36  6F1D               	movwf	(3+(?___lmul+04h))&0ffh
  2651+ 001C38  C013 F116          	movff	(c:19),(?___lmul)
  2652+ 001C3C  C014 F117          	movff	(c:19+1),(?___lmul+1)
  2653+ 001C40  C015 F118          	movff	(c:19+2),(?___lmul+2)
  2654+ 001C44  C016 F119          	movff	(c:19+3),(?___lmul+3)
  2655+ 001C48  EC64  F00D         	call	___lmul	;wreg free
  2656+ 001C4C  0E39               	movlw	039h
  2657+ 001C4E  0101               	movlb	1	; () banked
  2658+ 001C50  0101               	movlb	1	; () banked
  2659+ 001C52  2516               	addwf	(0+?___lmul)&0ffh,w
  2660+ 001C54  6E13               	movwf	((c:19)),c
  2661+ 001C56  0E30               	movlw	030h
  2662+ 001C58  0101               	movlb	1	; () banked
  2663+ 001C5A  0101               	movlb	1	; () banked
  2664+ 001C5C  2117               	addwfc	(1+?___lmul)&0ffh,w
  2665+ 001C5E  6E14               	movwf	1+((c:19)),c
  2666+ 001C60  0E00               	movlw	0
  2667+ 001C62  0101               	movlb	1	; () banked
  2668+ 001C64  0101               	movlb	1	; () banked
  2669+ 001C66  2118               	addwfc	(2+?___lmul)&0ffh,w
  2670+ 001C68  6E15               	movwf	2+((c:19)),c
  2671+ 001C6A  0E00               	movlw	0
  2672+ 001C6C  0101               	movlb	1	; () banked
  2673+ 001C6E  0101               	movlb	1	; () banked
  2674+ 001C70  2119               	addwfc	(3+?___lmul)&0ffh,w
  2675+ 001C72  6E16               	movwf	3+((c:19)),c
  2676+ 001C74  0EFF               	movlw	0FFh
  2677+ 001C76  1415               	andwf	(0+2+(c:19))&0ffh,w
  2678+ 001C78  0101               	movlb	1	; () banked
  2679+                          	
  2680+ 001C7A  0101               	movlb	1	; () banked
  2681+ 001C7C  6F14               	movwf	((?_rand))&0ffh
  2682+ 001C7E  0E7F               	movlw	07Fh
  2683+ 001C80  1416               	andwf	(1+2+(c:19))&0ffh,w
  2684+ 001C82  0101               	movlb	1	; () banked
  2685+ 001C84  6F15               	movwf	1+((?_rand))&0ffh
  2686+ 001C86  D000               	goto	l218
  2687+                          	line	18
  2688+ 001C88                     l218:
  2689+                          			; BSR set to: ?
  2690+                          
  2691+ 001C88  0012               	return
  2692+                          	opt stack 0
  2693+                          GLOBAL __end_of_rand
  2694+ 001C8A                     	__end_of_rand:
  2695+                          	FNSIZE	_rand,0,2
  2696+                          ; =============== function _rand ends ==========
      +                          ==
  2697+                          
  2698+                          	signat	_rand,90
  2699+                          	global	_Wait_ms
  2700+                          	global	??_Wait_ms
  2701+                          	global	?_Wait_ms
  2702+                                  psect   text14,class=CODE,space=0,reloc=
      +                          2
  2703+                          
  2704+                          	opt lm
  2705+                          	file	"LCD_PortD.c"
  2706+                          	line	16
  2707+ 000000                     	__size_of_Wait_ms	equ	__end_of_Wait_ms-_Wait_ms
  2708+                          ;LCD_PortD.c: 15: void Wait_ms(unsigned int X)
  2709+                          ;LCD_PortD.c: 16: {
  2710+                          	
  2711+ 001D8E                     _Wait_ms:		; BSR set to: ?
  2712+                          
  2713+                          	opt stack 26
  2714+                          	line	19
  2715+                          ;LCD_PortD.c: 17: unsigned int i, j;
  2716+                          ;LCD_PortD.c: 19: for (i=0; i<X; i++)
  2717+ 001D8E  0E00               	movlw	low(0)
  2718+ 001D90  0101               	movlb	1	; () banked
  2719+ 001D92  0101               	movlb	1	; () banked
  2720+ 001D94  6F1A               	movwf	((Wait_ms@i))&0ffh
  2721+ 001D96  0E00               	movlw	high(0)
  2722+ 001D98  0101               	movlb	1	; () banked
  2723+ 001D9A  6F1B               	movwf	((Wait_ms@i+1))&0ffh
  2724+ 001D9C  D026               	goto	l118
  2725+                          	line	20
  2726+                          	
  2727+ 001D9E                     l115:		; BSR set to: ?
  2728+                          
  2729+                          ;LCD_PortD.c: 20: for (j=0; j<618; j++);
  2730+ 001D9E  0E00               	movlw	low(0)
  2731+ 001DA0  0101               	movlb	1	; () banked
  2732+ 001DA2  0101               	movlb	1	; () banked
  2733+ 001DA4  6F1C               	movwf	((Wait_ms@j))&0ffh
  2734+ 001DA6  0E00               	movlw	high(0)
  2735+ 001DA8  0101               	movlb	1	; () banked
  2736+ 001DAA  6F1D               	movwf	((Wait_ms@j+1))&0ffh
  2737+ 001DAC  0E6A               	movlw	06Ah
  2738+ 001DAE  0101               	movlb	1	; () banked
  2739+ 001DB0  0101               	movlb	1	; () banked
  2740+ 001DB2  5D1C               	subwf	((Wait_ms@j))&0ffh,w
  2741+ 001DB4  0E02               	movlw	02h
  2742+ 001DB6  0101               	movlb	1	; () banked
  2743+ 001DB8  591D               	subwfb	((Wait_ms@j+1))&0ffh,w
  2744+ 001DBA  A0D8               	btfss	status,0
  2745+ 001DBC  D001               	goto	u2991
  2746+ 001DBE  D001               	goto	u2990
  2747+ 001DC0                     u2991:
  2748+ 001DC0  D001               	goto	l119
  2749+ 001DC2                     u2990:
  2750+ 001DC2  D00F               	goto	l120
  2751+                          	
  2752+ 001DC4                     l119:		; BSR set to: ?
  2753+                          
  2754+ 001DC4  0101               	movlb	1	; () banked
  2755+ 001DC6  0101               	movlb	1	; () banked
  2756+ 001DC8  4B1C               	infsnz	((Wait_ms@j))&0ffh
  2757+ 001DCA  2B1D               	incf	((Wait_ms@j+1))&0ffh
  2758+ 001DCC  0E6A               	movlw	06Ah
  2759+ 001DCE  0101               	movlb	1	; () banked
  2760+ 001DD0  0101               	movlb	1	; () banked
  2761+ 001DD2  5D1C               	subwf	((Wait_ms@j))&0ffh,w
  2762+ 001DD4  0E02               	movlw	02h
  2763+ 001DD6  0101               	movlb	1	; () banked
  2764+ 001DD8  591D               	subwfb	((Wait_ms@j+1))&0ffh,w
  2765+ 001DDA  A0D8               	btfss	status,0
  2766+ 001DDC  D001               	goto	u3001
  2767+ 001DDE  D001               	goto	u3000
  2768+ 001DE0                     u3001:
  2769+ 001DE0  D7F1               	goto	l119
  2770+ 001DE2                     u3000:
  2771+                          	
  2772+ 001DE2                     l120:		; BSR set to: ?
  2773+                          
  2774+                          	line	19
  2775+ 001DE2  0101               	movlb	1	; () banked
  2776+ 001DE4  0101               	movlb	1	; () banked
  2777+ 001DE6  4B1A               	infsnz	((Wait_ms@i))&0ffh
  2778+ 001DE8  2B1B               	incf	((Wait_ms@i+1))&0ffh
  2779+                          	
  2780+ 001DEA                     l118:		; BSR set to: ?
  2781+                          
  2782+ 001DEA  0101               	movlb	1	; () banked
  2783+ 001DEC  0101               	movlb	1	; () banked
  2784+ 001DEE  5118               	movf	((Wait_ms@X))&0ffh,w
  2785+ 001DF0  0101               	movlb	1	; () banked
  2786+ 001DF2  0101               	movlb	1	; () banked
  2787+ 001DF4  5D1A               	subwf	((Wait_ms@i))&0ffh,w
  2788+ 001DF6  0101               	movlb	1	; () banked
  2789+ 001DF8  0101               	movlb	1	; () banked
  2790+ 001DFA  5119               	movf	((Wait_ms@X+1))&0ffh,w
  2791+ 001DFC  0101               	movlb	1	; () banked
  2792+ 001DFE  0101               	movlb	1	; () banked
  2793+ 001E00  591B               	subwfb	((Wait_ms@i+1))&0ffh,w
  2794+ 001E02  A0D8               	btfss	status,0
  2795+ 001E04  D001               	goto	u3011
  2796+ 001E06  D001               	goto	u3010
  2797+ 001E08                     u3011:
  2798+ 001E08  D7CA               	goto	l115
  2799+ 001E0A                     u3010:
  2800+                          	
  2801+ 001E0A                     l116:		; BSR set to: ?
  2802+                          
  2803+                          	line	21
  2804+                          ;LCD_PortD.c: 21: }
  2805+ 001E0A                     l114:
  2806+                          			; BSR set to: ?
  2807+                          
  2808+ 001E0A  0012               	return
  2809+                          	opt stack 0
  2810+                          GLOBAL __end_of_Wait_ms
  2811+ 001E0C                     	__end_of_Wait_ms:
  2812+                          	FNSIZE	_Wait_ms,4,2
  2813+                          ; =============== function _Wait_ms ends =======
      +                          =====
  2814+                          
  2815+                          	signat	_Wait_ms,4216
  2816+                          	global	_LCD_Strobe
  2817+                          	global	??_LCD_Strobe
  2818+                          	global	?_LCD_Strobe
  2819+                                  psect   text15,class=CODE,space=0,reloc=
      +                          2
  2820+                          
  2821+                          	opt lm
  2822+                          	file	"LCD_PortD.c"
  2823+                          	line	32
  2824+ 000000                     	__size_of_LCD_Strobe	equ	__end_of_LCD_Strobe-_L
      +                          CD_Strobe
  2825+                          ;LCD_PortD.c: 31: void LCD_Strobe(void)
  2826+                          ;LCD_PortD.c: 32: {
  2827+                          	
  2828+ 001FBE                     _LCD_Strobe:		; BSR set to: ?
  2829+                          
  2830+                          	opt stack 26
  2831+                          	line	33
  2832+ 001FBE  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  2833+                          	line	34
  2834+                          ;LCD_PortD.c: 34: LCD_Pause();
  2835+ 001FC0  EC9F  F00F         	call	_LCD_Pause	;wreg free
  2836+                          	line	35
  2837+                          ;LCD_PortD.c: 35: RD3 = 1;
  2838+ 001FC4  8683               	bsf	c:(31771/8),(31771)&7	;volatile
  2839+                          	line	36
  2840+                          ;LCD_PortD.c: 36: LCD_Pause();
  2841+ 001FC6  EC9F  F00F         	call	_LCD_Pause	;wreg free
  2842+                          	line	37
  2843+                          ;LCD_PortD.c: 37: RD3 = 0;
  2844+ 001FCA  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  2845+                          	line	38
  2846+                          ;LCD_PortD.c: 38: LCD_Pause();
  2847+ 001FCC  EC9F  F00F         	call	_LCD_Pause	;wreg free
  2848+                          	line	39
  2849+                          ;LCD_PortD.c: 39: }
  2850+ 001FD0                     l126:
  2851+                          			; BSR set to: ?
  2852+                          
  2853+ 001FD0  0012               	return
  2854+                          	opt stack 0
  2855+                          GLOBAL __end_of_LCD_Strobe
  2856+ 001FD2                     	__end_of_LCD_Strobe:
  2857+                          	FNSIZE	_LCD_Strobe,0,0
  2858+                          ; =============== function _LCD_Strobe ends ====
      +                          ========
  2859+                          
  2860+                          	signat	_LCD_Strobe,88
  2861+                          	global	___lmul
  2862+                          	global	??___lmul
  2863+                          	global	?___lmul
  2864+                                  psect   text16,class=CODE,space=0,reloc=
      +                          2
  2865+                          
  2866+                          	opt lm
  2867+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.63\sources\lmul.c"
  2868+                          	line	3
  2869+ 000000                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  2870+                          	
  2871+ 001AC8                     ___lmul:		; BSR set to: ?
  2872+                          
  2873+                          	opt stack 26
  2874+                          	line	4
  2875+ 001AC8  0E00               	movlw	low(0)
  2876+ 001ACA  0101               	movlb	1	; () banked
  2877+ 001ACC  0101               	movlb	1	; () banked
  2878+ 001ACE  6F1E               	movwf	((___lmul@product))&0ffh
  2879+ 001AD0  0E00               	movlw	high(0)
  2880+ 001AD2  0101               	movlb	1	; () banked
  2881+ 001AD4  6F1F               	movwf	((___lmul@product+1))&0ffh
  2882+ 001AD6  0E00               	movlw	low highword(0)
  2883+ 001AD8  0101               	movlb	1	; () banked
  2884+ 001ADA  6F20               	movwf	((___lmul@product+2))&0ffh
  2885+ 001ADC  0E00               	movlw	high highword(0)
  2886+ 001ADE  0101               	movlb	1	; () banked
  2887+ 001AE0  6F21               	movwf	((___lmul@product+3))&0ffh
  2888+                          	line	6
  2889+                          	
  2890+ 001AE2                     l526:		; BSR set to: ?
  2891+                          
  2892+                          	line	7
  2893+ 001AE2  0101               	movlb	1	; () banked
  2894+                          	
  2895+ 001AE4  0101               	movlb	1	; () banked
  2896+ 001AE6  A116               	btfss	((___lmul@multiplier))&0ffh,(0)&7
  2897+ 001AE8  D001               	goto	u3021
  2898+ 001AEA  D001               	goto	u3020
  2899+ 001AEC                     u3021:
  2900+ 001AEC  D018               	goto	l527
  2901+ 001AEE                     u3020:
  2902+                          	line	8
  2903+ 001AEE  0101               	movlb	1	; () banked
  2904+ 001AF0  0101               	movlb	1	; () banked
  2905+ 001AF2  511A               	movf	((___lmul@multiplicand))&0ffh,w
  2906+ 001AF4  0101               	movlb	1	; () banked
  2907+ 001AF6  0101               	movlb	1	; () banked
  2908+ 001AF8  271E               	addwf	((___lmul@product))&0ffh
  2909+ 001AFA  0101               	movlb	1	; () banked
  2910+ 001AFC  0101               	movlb	1	; () banked
  2911+ 001AFE  511B               	movf	((___lmul@multiplicand+1))&0ffh,w
  2912+ 001B00  0101               	movlb	1	; () banked
  2913+ 001B02  0101               	movlb	1	; () banked
  2914+ 001B04  231F               	addwfc	((___lmul@product+1))&0ffh
  2915+ 001B06  0101               	movlb	1	; () banked
  2916+ 001B08  0101               	movlb	1	; () banked
  2917+ 001B0A  511C               	movf	((___lmul@multiplicand+2))&0ffh,w
  2918+ 001B0C  0101               	movlb	1	; () banked
  2919+ 001B0E  0101               	movlb	1	; () banked
  2920+ 001B10  2320               	addwfc	((___lmul@product+2))&0ffh
  2921+ 001B12  0101               	movlb	1	; () banked
  2922+ 001B14  0101               	movlb	1	; () banked
  2923+ 001B16  511D               	movf	((___lmul@multiplicand+3))&0ffh,w
  2924+ 001B18  0101               	movlb	1	; () banked
  2925+ 001B1A  0101               	movlb	1	; () banked
  2926+ 001B1C  2321               	addwfc	((___lmul@product+3))&0ffh
  2927+                          	
  2928+ 001B1E                     l527:		; BSR set to: ?
  2929+                          
  2930+                          	line	9
  2931+ 001B1E  0101               	movlb	1	; () banked
  2932+ 001B20  90D8               	bcf	status,0
  2933+ 001B22  0101               	movlb	1	; () banked
  2934+ 001B24  371A               	rlcf	((___lmul@multiplicand))&0ffh
  2935+ 001B26  0101               	movlb	1	; () banked
  2936+ 001B28  371B               	rlcf	((___lmul@multiplicand+1))&0ffh
  2937+ 001B2A  0101               	movlb	1	; () banked
  2938+ 001B2C  371C               	rlcf	((___lmul@multiplicand+2))&0ffh
  2939+ 001B2E  0101               	movlb	1	; () banked
  2940+ 001B30  371D               	rlcf	((___lmul@multiplicand+3))&0ffh
  2941+                          	line	10
  2942+ 001B32  0101               	movlb	1	; () banked
  2943+ 001B34  90D8               	bcf	status,0
  2944+ 001B36  0101               	movlb	1	; () banked
  2945+ 001B38  3319               	rrcf	((___lmul@multiplier+3))&0ffh
  2946+ 001B3A  0101               	movlb	1	; () banked
  2947+ 001B3C  3318               	rrcf	((___lmul@multiplier+2))&0ffh
  2948+ 001B3E  0101               	movlb	1	; () banked
  2949+ 001B40  3317               	rrcf	((___lmul@multiplier+1))&0ffh
  2950+ 001B42  0101               	movlb	1	; () banked
  2951+ 001B44  3316               	rrcf	((___lmul@multiplier))&0ffh
  2952+                          	line	11
  2953+ 001B46  0101               	movlb	1	; () banked
  2954+ 001B48  5119               	movf	((___lmul@multiplier+3))&0ffh,w
  2955+ 001B4A  1116               	iorwf ((___lmul@multiplier))&0ffh,w
  2956+ 001B4C  1117               	iorwf ((___lmul@multiplier+1))&0ffh,w
  2957+ 001B4E  1118               	iorwf ((___lmul@multiplier+2))&0ffh,w
  2958+                          
  2959+ 001B50  A4D8               	btfss	status,2
  2960+ 001B52  D001               	goto	u3031
  2961+ 001B54  D001               	goto	u3030
  2962+ 001B56                     u3031:
  2963+ 001B56  D7C5               	goto	l526
  2964+ 001B58                     u3030:
  2965+                          	
  2966+ 001B58                     l525:		; BSR set to: ?
  2967+                          
  2968+                          	line	12
  2969+ 001B58  C11E  F116         	movff	(___lmul@product),(?___lmul)
  2970+ 001B5C  C11F  F117         	movff	(___lmul@product+1),(?___lmul+1)
  2971+ 001B60  C120  F118         	movff	(___lmul@product+2),(?___lmul+2)
  2972+ 001B64  C121  F119         	movff	(___lmul@product+3),(?___lmul+3)
  2973+ 001B68  D000               	goto	l523
  2974+                          	line	13
  2975+ 001B6A                     l523:
  2976+                          			; BSR set to: ?
  2977+                          
  2978+ 001B6A  0012               	return
  2979+                          	opt stack 0
  2980+                          GLOBAL __end_of___lmul
  2981+ 001B6C                     	__end_of___lmul:
  2982+                          	FNSIZE	___lmul,4,8
  2983+                          ; =============== function ___lmul ends ========
      +                          ====
  2984+                          
  2985+                          	signat	___lmul,8316
  2986+                          	global	_srand
  2987+                          	global	??_srand
  2988+                          	global	?_srand
  2989+                                  psect   text17,class=CODE,space=0,reloc=
      +                          2
  2990+                          
  2991+                          	opt lm
  2992+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.63\sources\rand.c"
  2993+                          	line	8
  2994+ 000000                     	__size_of_srand	equ	__end_of_srand-_srand
  2995+                          	
  2996+ 001FA0                     _srand:		; BSR set to: ?
  2997+                          
  2998+                          	opt stack 26
  2999+                          	line	9
  3000+ 001FA0  0101               	movlb	1	; () banked
  3001+ 001FA2  C116  F013         	movff	(srand@x),(c:19)
  3002+ 001FA6  0101               	movlb	1	; () banked
  3003+ 001FA8  C117  F014         	movff	(srand@x+1),(c:19+1)
  3004+ 001FAC  6A15               	clrf	((c:19+2)),c
  3005+ 001FAE  6A16               	clrf	((c:19+3)),c
  3006+                          
  3007+                          	line	10
  3008+ 001FB0  0101               	movlb	1	; () banked
  3009+ 001FB2  6F18               	movwf	(??_srand+0+0)&0ffh
  3010+ 001FB4  0E01               	movlw	low(01h)
  3011+ 001FB6  6E08               	movwf	((c:8)),c
  3012+ 001FB8  0101               	movlb	1	; () banked
  3013+ 001FBA  5118               	movf	(??_srand+0+0)&0ffh,w
  3014+                          	line	11
  3015+ 001FBC                     l217:
  3016+                          			; BSR set to: ?
  3017+                          
  3018+ 001FBC  0012               	return
  3019+                          	opt stack 0
  3020+                          GLOBAL __end_of_srand
  3021+ 001FBE                     	__end_of_srand:
  3022+                          	FNSIZE	_srand,1,2
  3023+                          ; =============== function _srand ends =========
      +                          ===
  3024+                          
  3025+                          	signat	_srand,4216
  3026+                          	global	_LCD_Pause
  3027+                          	global	??_LCD_Pause
  3028+                          	global	?_LCD_Pause
  3029+                                  psect   text18,class=CODE,space=0,reloc=
      +                          2
  3030+                          
  3031+                          	opt lm
  3032+                          	file	"LCD_PortD.c"
  3033+                          	line	25
  3034+ 000000                     	__size_of_LCD_Pause	equ	__end_of_LCD_Pause-_LCD
      +                          _Pause
  3035+                          ;LCD_PortD.c: 24: void LCD_Pause(void)
  3036+                          ;LCD_PortD.c: 25: {
  3037+                          	
  3038+ 001F3E                     _LCD_Pause:		; BSR set to: ?
  3039+                          
  3040+                          	opt stack 25
  3041+                          	line	27
  3042+ 001F3E  0101               	movlb	1	; () banked
  3043+ 001F40  6F19               	movwf	(??_LCD_Pause+1+0)&0ffh
  3044+ 001F42  0E00               	movlw	low(0)
  3045+ 001F44  0101               	movlb	1	; () banked
  3046+ 001F46  0101               	movlb	1	; () banked
  3047+ 001F48  6F18               	movwf	((LCD_Pause@x))&0ffh
  3048+ 001F4A  0101               	movlb	1	; () banked
  3049+ 001F4C  5119               	movf	(??_LCD_Pause+1+0)&0ffh,w
  3050+ 001F4E  0E13               	movlw	(014h-1)
  3051+ 001F50  0101               	movlb	1	; () banked
  3052+ 001F52  0101               	movlb	1	; () banked
  3053+ 001F54  6518               	cpfsgt	((LCD_Pause@x))&0ffh
  3054+ 001F56  D001               	goto	u3041
  3055+ 001F58  D001               	goto	u3040
  3056+ 001F5A                     u3041:
  3057+ 001F5A  D001               	goto	l123
  3058+ 001F5C                     u3040:
  3059+ 001F5C  D00A               	goto	l124
  3060+                          	
  3061+ 001F5E                     l123:		; BSR set to: ?
  3062+                          
  3063+ 001F5E  0101               	movlb	1	; () banked
  3064+ 001F60  0101               	movlb	1	; () banked
  3065+ 001F62  2B18               	incf	((LCD_Pause@x))&0ffh
  3066+ 001F64  0E13               	movlw	(014h-1)
  3067+ 001F66  0101               	movlb	1	; () banked
  3068+ 001F68  0101               	movlb	1	; () banked
  3069+ 001F6A  6518               	cpfsgt	((LCD_Pause@x))&0ffh
  3070+ 001F6C  D001               	goto	u3051
  3071+ 001F6E  D001               	goto	u3050
  3072+ 001F70                     u3051:
  3073+ 001F70  D7F6               	goto	l123
  3074+ 001F72                     u3050:
  3075+                          	
  3076+ 001F72                     l124:		; BSR set to: ?
  3077+                          
  3078+                          	line	28
  3079+                          ;LCD_PortD.c: 28: }
  3080+ 001F72                     l122:
  3081+                          			; BSR set to: ?
  3082+                          
  3083+ 001F72  0012               	return
  3084+                          	opt stack 0
  3085+                          GLOBAL __end_of_LCD_Pause
  3086+ 001F74                     	__end_of_LCD_Pause:
  3087+                          	FNSIZE	_LCD_Pause,2,0
  3088+                          ; =============== function _LCD_Pause ends =====
      +                          =======
  3089+                          
  3090+                          	signat	_LCD_Pause,88
  3091+                          	global	_IntServe
  3092+                          	global	??_IntServe
  3093+                          	global	?_IntServe
  3094+                                  psect   text19,class=CODE,space=0,reloc=
      +                          2
  3095+                          
  3096+                          	opt lm
  3097+                          	file	"Main.c"
  3098+                          	line	59
  3099+ 000000                     	__size_of_IntServe	equ	__end_of_IntServe-_IntSe
      +                          rve
  3100+                          ;Main.c: 58: void interrupt IntServe(void)
  3101+                          ;Main.c: 59: {
  3102+                          	
  3103+ 00192A                     _IntServe:		; BSR set to: ?
  3104+                          
  3105+ 00192A  0006               	pop	; remove dummy address from shadow register
      +                           refresh
  3106+                          
  3107+                          	opt stack 31
  3108+                                  psect   intcode,class=CODE,space=0,reloc
      +                          =2
  3109+                          	global	int_func
  3110+ 000808                     int_func:
  3111+                                  psect   intcode
  3112+ 000808  CFFA F122          	movff	pclat+0,??_IntServe+0
  3113+ 00080C  CFFB F123          	movff	pclat+1,??_IntServe+1
  3114+ 000810  CFE9 F124          	movff	fsr0l+0,??_IntServe+2
  3115+ 000814  ED95  F00C         	call	_IntServe,f	;refresh shadow registers
  3116+                                  psect   text19
  3117+ 00192C  CFEA F125          	movff	fsr0h+0,??_IntServe+3
  3118+ 001930  CFE1 F126          	movff	fsr1l+0,??_IntServe+4
  3119+ 001934  CFE2 F127          	movff	fsr1h+0,??_IntServe+5
  3120+ 001938  CFD9 F128          	movff	fsr2l+0,??_IntServe+6
  3121+ 00193C  CFDA F129          	movff	fsr2h+0,??_IntServe+7
  3122+ 001940  CFF3 F12A          	movff	prodl+0,??_IntServe+8
  3123+ 001944  CFF4 F12B          	movff	prodh+0,??_IntServe+9
  3124+ 001948  CFF6 F12C          	movff	tblptrl+0,??_IntServe+10
  3125+ 00194C  CFF7 F12D          	movff	tblptrh+0,??_IntServe+11
  3126+ 001950  CFF8 F12E          	movff	tblptru+0,??_IntServe+12
  3127+                          	line	60
  3128+                          ;Main.c: 60: if (TMR0IF) {
  3129+ 001954  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
  3130+ 001956  D001               	goto	i2u3061
  3131+ 001958  D001               	goto	i2u3060
  3132+ 00195A                     i2u3061:
  3133+ 00195A  D03F               	goto	i2l150
  3134+ 00195C                     i2u3060:
  3135+                          	line	61
  3136+                          ;Main.c: 61: TMR0 = -1300;
  3137+ 00195C  0EEC               	movlw	low(0FAECh)
  3138+ 00195E  6ED6               	movwf	((c:4054)),c	;volatile
  3139+ 001960  0EFA               	movlw	high(0FAECh)
  3140+ 001962  6ED7               	movwf	((c:4054+1)),c	;volatile
  3141+                          	line	62
  3142+                          ;Main.c: 62: if (count == 255){
  3143+ 001964  2804               	incf	((c:4)),c,w
  3144+ 001966  1005               	iorwf ((c:4+1)),c,w
  3145+                          
  3146+ 001968  A4D8               	btfss	status,2
  3147+ 00196A  D001               	goto	i2u3071
  3148+ 00196C  D001               	goto	i2u3070
  3149+ 00196E                     i2u3071:
  3150+ 00196E  D014               	goto	i2l151
  3151+ 001970                     i2u3070:
  3152+                          	line	63
  3153+                          ;Main.c: 63: count = 0;
  3154+ 001970  0E00               	movlw	low(0)
  3155+ 001972  6E04               	movwf	((c:4)),c
  3156+ 001974  0E00               	movlw	high(0)
  3157+ 001976  6E05               	movwf	((c:4+1)),c
  3158+                          	line	64
  3159+                          ;Main.c: 64: RC0 = 1;
  3160+ 001978  8082               	bsf	c:(31760/8),(31760)&7	;volatile
  3161+                          	line	65
  3162+                          ;Main.c: 65: RC1 = 1;
  3163+ 00197A  8282               	bsf	c:(31761/8),(31761)&7	;volatile
  3164+                          	line	66
  3165+                          ;Main.c: 66: RC2 = 1;
  3166+ 00197C  8482               	bsf	c:(31762/8),(31762)&7	;volatile
  3167+                          	line	67
  3168+                          ;Main.c: 67: count2++;
  3169+ 00197E  4A02               	infsnz	((c:2)),c
  3170+ 001980  2A03               	incf	((c:2+1)),c
  3171+                          	line	68
  3172+                          ;Main.c: 68: if (count2 == 10){
  3173+ 001982  5002               	movf	((c:2)),c,w
  3174+ 001984  0A0A               	xorlw	10
  3175+ 001986  1003               	iorwf ((c:2+1)),c,w
  3176+                          
  3177+ 001988  A4D8               	btfss	status,2
  3178+ 00198A  D001               	goto	i2u3081
  3179+ 00198C  D001               	goto	i2u3080
  3180+ 00198E                     i2u3081:
  3181+ 00198E  D004               	goto	i2l151
  3182+ 001990                     i2u3080:
  3183+                          	line	70
  3184+                          ;Main.c: 70: count2 = 0;
  3185+ 001990  0E00               	movlw	low(0)
  3186+ 001992  6E02               	movwf	((c:2)),c
  3187+ 001994  0E00               	movlw	high(0)
  3188+ 001996  6E03               	movwf	((c:2+1)),c
  3189+                          	line	71
  3190+                          	
  3191+ 001998                     i2l152:		; BSR set to: ?
  3192+                          
  3193+                          	line	72
  3194+                          	
  3195+ 001998                     i2l151:		; BSR set to: ?
  3196+                          
  3197+                          	line	73
  3198+                          ;Main.c: 71: }
  3199+                          ;Main.c: 72: }
  3200+                          ;Main.c: 73: if (count == R2 )
  3201+ 001998  500E               	movf	((c:13+1)),c,w
  3202+ 00199A  1805               	xorwf	((c:4+1)),c,w
  3203+ 00199C  E102               	bnz	i2u3095
  3204+ 00199E  500D               	movf	((c:13)),c,w
  3205+ 0019A0  1804               	xorwf	((c:4)),c,w
  3206+ 0019A2                     i2u3095:
  3207+                          
  3208+ 0019A2  A4D8               	btfss	status,2
  3209+ 0019A4  D001               	goto	i2u3091
  3210+ 0019A6  D001               	goto	i2u3090
  3211+ 0019A8                     i2u3091:
  3212+ 0019A8  D001               	goto	i2l153
  3213+ 0019AA                     i2u3090:
  3214+                          	line	75
  3215+                          ;Main.c: 74: {
  3216+                          ;Main.c: 75: RC0 = 0;
  3217+ 0019AA  9082               	bcf	c:(31760/8),(31760)&7	;volatile
  3218+                          	line	76
  3219+                          	
  3220+ 0019AC                     i2l153:		; BSR set to: ?
  3221+                          
  3222+                          	line	77
  3223+                          ;Main.c: 76: }
  3224+                          ;Main.c: 77: if (count == G2)
  3225+ 0019AC  5018               	movf	((c:23+1)),c,w
  3226+ 0019AE  1805               	xorwf	((c:4+1)),c,w
  3227+ 0019B0  E102               	bnz	i2u3105
  3228+ 0019B2  5017               	movf	((c:23)),c,w
  3229+ 0019B4  1804               	xorwf	((c:4)),c,w
  3230+ 0019B6                     i2u3105:
  3231+                          
  3232+ 0019B6  A4D8               	btfss	status,2
  3233+ 0019B8  D001               	goto	i2u3101
  3234+ 0019BA  D001               	goto	i2u3100
  3235+ 0019BC                     i2u3101:
  3236+ 0019BC  D001               	goto	i2l154
  3237+ 0019BE                     i2u3100:
  3238+                          	line	79
  3239+                          ;Main.c: 78: {
  3240+                          ;Main.c: 79: RC1 = 0;
  3241+ 0019BE  9282               	bcf	c:(31761/8),(31761)&7	;volatile
  3242+                          	line	80
  3243+                          	
  3244+ 0019C0                     i2l154:		; BSR set to: ?
  3245+                          
  3246+                          	line	81
  3247+                          ;Main.c: 80: }
  3248+                          ;Main.c: 81: if (count == B2)
  3249+ 0019C0  5020               	movf	((c:31+1)),c,w
  3250+ 0019C2  1805               	xorwf	((c:4+1)),c,w
  3251+ 0019C4  E102               	bnz	i2u3115
  3252+ 0019C6  501F               	movf	((c:31)),c,w
  3253+ 0019C8  1804               	xorwf	((c:4)),c,w
  3254+ 0019CA                     i2u3115:
  3255+                          
  3256+ 0019CA  A4D8               	btfss	status,2
  3257+ 0019CC  D001               	goto	i2u3111
  3258+ 0019CE  D001               	goto	i2u3110
  3259+ 0019D0                     i2u3111:
  3260+ 0019D0  D001               	goto	i2l155
  3261+ 0019D2                     i2u3110:
  3262+                          	line	83
  3263+                          ;Main.c: 82: {
  3264+                          ;Main.c: 83: RC2 = 0;
  3265+ 0019D2  9482               	bcf	c:(31762/8),(31762)&7	;volatile
  3266+                          	line	84
  3267+                          	
  3268+ 0019D4                     i2l155:		; BSR set to: ?
  3269+                          
  3270+                          	line	85
  3271+                          ;Main.c: 84: }
  3272+                          ;Main.c: 85: count++;
  3273+ 0019D4  4A04               	infsnz	((c:4)),c
  3274+ 0019D6  2A05               	incf	((c:4+1)),c
  3275+                          	line	87
  3276+                          ;Main.c: 87: TMR0IF = 0;
  3277+ 0019D8  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  3278+                          	line	88
  3279+                          	
  3280+ 0019DA                     i2l150:		; BSR set to: ?
  3281+                          
  3282+                          	line	90
  3283+                          ;Main.c: 88: }
  3284+                          ;Main.c: 90: }
  3285+ 0019DA                     i2l149:
  3286+                          			; BSR set to: ?
  3287+                          
  3288+ 0019DA  C12E  FFF8         	movff	??_IntServe+12,tblptru+0
  3289+ 0019DE  C12D  FFF7         	movff	??_IntServe+11,tblptrh+0
  3290+ 0019E2  C12C  FFF6         	movff	??_IntServe+10,tblptrl+0
  3291+ 0019E6  C12B  FFF4         	movff	??_IntServe+9,prodh+0
  3292+ 0019EA  C12A  FFF3         	movff	??_IntServe+8,prodl+0
  3293+ 0019EE  C129  FFDA         	movff	??_IntServe+7,fsr2h+0
  3294+ 0019F2  C128  FFD9         	movff	??_IntServe+6,fsr2l+0
  3295+ 0019F6  C127  FFE2         	movff	??_IntServe+5,fsr1h+0
  3296+ 0019FA  C126  FFE1         	movff	??_IntServe+4,fsr1l+0
  3297+ 0019FE  C125  FFEA         	movff	??_IntServe+3,fsr0h+0
  3298+ 001A02  C124  FFE9         	movff	??_IntServe+2,fsr0l+0
  3299+ 001A06  C123  FFFB         	movff	??_IntServe+1,pclat+1
  3300+ 001A0A  C122  FFFA         	movff	??_IntServe+0,pclat+0
  3301+ 001A0E  0011               	retfie f
  3302+                          	opt stack 0
  3303+                          GLOBAL __end_of_IntServe
  3304+ 001A10                     	__end_of_IntServe:
  3305+                          	FNSIZE	_IntServe,13,0
  3306+                          ; =============== function _IntServe ends ======
      +                          ======
  3307+                          
  3308+                          	signat	_IntServe,88
  3309+                          	FNCALL	_main,_LCD_Init
  3310+                          	FNCALL	_main,_LCD_Move
  3311+                          	FNCALL	_main,_LCD_Write
  3312+                          	FNCALL	_main,_A2D_Read
  3313+                          	FNCALL	_main,_srand
  3314+                          	FNCALL	_main,_Start
  3315+                          	FNCALL	_main,_LCD_Out
  3316+                          	FNCALL	_main,_Wait_ms
  3317+                          	FNCALL	_main,_Score
  3318+                          	FNCALL	_Score,_abs
  3319+                          	FNCALL	_Start,_RandomColor
  3320+                          	FNCALL	_Start,_LCD_Move
  3321+                          	FNCALL	_Start,_LCD_Write
  3322+                          	FNCALL	_LCD_Init,_LCD_Inst
  3323+                          	FNCALL	_LCD_Out,___lwmod
  3324+                          	FNCALL	_LCD_Out,___lwdiv
  3325+                          	FNCALL	_LCD_Out,_LCD_Write
  3326+                          	FNCALL	_RandomColor,_rand
  3327+                          	FNCALL	_LCD_Write,_LCD_Strobe
  3328+                          	FNCALL	_LCD_Move,_LCD_Inst
  3329+                          	FNCALL	_LCD_Inst,_LCD_Strobe
  3330+                          	FNCALL	_LCD_Inst,_Wait_ms
  3331+                          	FNCALL	_rand,_srand
  3332+                          	FNCALL	_rand,___lmul
  3333+                          	FNCALL	_LCD_Strobe,_LCD_Pause
  3334+                          	FNROOT	_main
  3335+                          	FNCALL	intlevel2,_IntServe
  3336+                          	global	intlevel2
  3337+                          	FNROOT	intlevel2
  3338+                          	global	_B2
  3339+                          	global	_B2
  3340+                                  psect   text20,class=CODE,space=0,reloc=
      +                          2
  3341+ 000000                     _B2  equ     31
  3342+                          
  3343+                          	opt lm
  3344+                          
  3345+                          	DABS	1,31,2	;_B2
  3346+                                  psect   idata,class=CODE,space=0
  3347+                          	line	16
  3348+                          
  3349+                          ;initializer for _B2
  3350+ 001072  0001               	dw	(01h)&0ffffh
  3351+                                  psect   smallconst,class=SMALLCONST,spac
      +                          e=0,reloc=2
  3352+ 001000  00                 	db	0	;reserve
  3353+                          	global	_MSG0
  3354+                          	line	20
  3355+ 001001                     _MSG0:
  3356+ 001001  50                 	db	low(050h)
  3357+ 001002  6C                 	db	low(06Ch)
  3358+ 001003  61                 	db	low(061h)
  3359+ 001004  79                 	db	low(079h)
  3360+ 001005  65                 	db	low(065h)
  3361+ 001006  72                 	db	low(072h)
  3362+ 001007  20                 	db	low(020h)
  3363+ 001008  31                 	db	low(031h)
  3364+ 001009  3A                 	db	low(03Ah)
  3365+ 00100A  20                 	db	low(020h)
  3366+ 00100B  20                 	db	low(020h)
  3367+ 00100C  20                 	db	low(020h)
  3368+ 00100D  20                 	db	low(020h)
  3369+ 00100E  20                 	db	low(020h)
  3370+ 00100F  20                 	db	low(020h)
  3371+ 001010  20                 	db	low(020h)
  3372+                          	global	_MSG1
  3373+                          	line	21
  3374+ 001011                     _MSG1:
  3375+ 001011  50                 	db	low(050h)
  3376+ 001012  6C                 	db	low(06Ch)
  3377+ 001013  61                 	db	low(061h)
  3378+ 001014  79                 	db	low(079h)
  3379+ 001015  65                 	db	low(065h)
  3380+ 001016  72                 	db	low(072h)
  3381+ 001017  20                 	db	low(020h)
  3382+ 001018  32                 	db	low(032h)
  3383+ 001019  3A                 	db	low(03Ah)
  3384+ 00101A  20                 	db	low(020h)
  3385+ 00101B  20                 	db	low(020h)
  3386+ 00101C  20                 	db	low(020h)
  3387+ 00101D  20                 	db	low(020h)
  3388+ 00101E  20                 	db	low(020h)
  3389+ 00101F  20                 	db	low(020h)
  3390+ 001020  20                 	db	low(020h)
  3391+                          	global	_MSG2
  3392+                          	line	22
  3393+ 001021                     _MSG2:
  3394+ 001021  20                 	db	low(020h)
  3395+ 001022  20                 	db	low(020h)
  3396+ 001023  20                 	db	low(020h)
  3397+ 001024  50                 	db	low(050h)
  3398+ 001025  72                 	db	low(072h)
  3399+ 001026  65                 	db	low(065h)
  3400+ 001027  73                 	db	low(073h)
  3401+ 001028  73                 	db	low(073h)
  3402+ 001029  20                 	db	low(020h)
  3403+ 00102A  20                 	db	low(020h)
  3404+ 00102B  52                 	db	low(052h)
  3405+ 00102C  42                 	db	low(042h)
  3406+ 00102D  34                 	db	low(034h)
  3407+ 00102E  20                 	db	low(020h)
  3408+ 00102F  20                 	db	low(020h)
  3409+ 001030  20                 	db	low(020h)
  3410+                          	global	_MSG3
  3411+                          	line	23
  3412+ 001031                     _MSG3:
  3413+ 001031  20                 	db	low(020h)
  3414+ 001032  20                 	db	low(020h)
  3415+ 001033  54                 	db	low(054h)
  3416+ 001034  6F                 	db	low(06Fh)
  3417+ 001035  20                 	db	low(020h)
  3418+ 001036  62                 	db	low(062h)
  3419+ 001037  65                 	db	low(065h)
  3420+ 001038  67                 	db	low(067h)
  3421+ 001039  69                 	db	low(069h)
  3422+ 00103A  6E                 	db	low(06Eh)
  3423+ 00103B  20                 	db	low(020h)
  3424+ 00103C  67                 	db	low(067h)
  3425+ 00103D  61                 	db	low(061h)
  3426+ 00103E  6D                 	db	low(06Dh)
  3427+ 00103F  65                 	db	low(065h)
  3428+ 001040  20                 	db	low(020h)
  3429+                          	global	_MSG4
  3430+                          	line	24
  3431+ 001041                     _MSG4:
  3432+ 001041  20                 	db	low(020h)
  3433+ 001042  50                 	db	low(050h)
  3434+ 001043  6C                 	db	low(06Ch)
  3435+ 001044  61                 	db	low(061h)
  3436+ 001045  79                 	db	low(079h)
  3437+ 001046  65                 	db	low(065h)
  3438+ 001047  72                 	db	low(072h)
  3439+ 001048  20                 	db	low(020h)
  3440+ 001049  31                 	db	low(031h)
  3441+ 00104A  20                 	db	low(020h)
  3442+ 00104B  57                 	db	low(057h)
  3443+ 00104C  69                 	db	low(069h)
  3444+ 00104D  6E                 	db	low(06Eh)
  3445+ 00104E  73                 	db	low(073h)
  3446+ 00104F  21                 	db	low(021h)
  3447+ 001050  20                 	db	low(020h)
  3448+                          	global	_MSG5
  3449+                          	line	25
  3450+ 001051                     _MSG5:
  3451+ 001051  20                 	db	low(020h)
  3452+ 001052  50                 	db	low(050h)
  3453+ 001053  6C                 	db	low(06Ch)
  3454+ 001054  61                 	db	low(061h)
  3455+ 001055  79                 	db	low(079h)
  3456+ 001056  65                 	db	low(065h)
  3457+ 001057  72                 	db	low(072h)
  3458+ 001058  20                 	db	low(020h)
  3459+ 001059  32                 	db	low(032h)
  3460+ 00105A  20                 	db	low(020h)
  3461+ 00105B  57                 	db	low(057h)
  3462+ 00105C  69                 	db	low(069h)
  3463+ 00105D  6E                 	db	low(06Eh)
  3464+ 00105E  73                 	db	low(073h)
  3465+ 00105F  21                 	db	low(021h)
  3466+ 001060  20                 	db	low(020h)
  3467+                          	global	_MSG6
  3468+                          	line	26
  3469+ 001061                     _MSG6:
  3470+ 001061  20                 	db	low(020h)
  3471+ 001062  52                 	db	low(052h)
  3472+ 001063  42                 	db	low(042h)
  3473+ 001064  34                 	db	low(034h)
  3474+ 001065  20                 	db	low(020h)
  3475+ 001066  74                 	db	low(074h)
  3476+ 001067  6F                 	db	low(06Fh)
  3477+ 001068  20                 	db	low(020h)
  3478+ 001069  52                 	db	low(052h)
  3479+ 00106A  65                 	db	low(065h)
  3480+ 00106B  73                 	db	low(073h)
  3481+ 00106C  74                 	db	low(074h)
  3482+ 00106D  61                 	db	low(061h)
  3483+ 00106E  72                 	db	low(072h)
  3484+ 00106F  74                 	db	low(074h)
  3485+ 001070  20                 	db	low(020h)
  3486+                          	global	_MSG0
  3487+                          	global	_MSG1
  3488+                          	global	_MSG2
  3489+                          	global	_MSG3
  3490+                          	global	_MSG4
  3491+                          	global	_MSG5
  3492+                          	global	_MSG6
  3493+                          	global	_randx
  3494+ 000000                     _randx  equ     19
  3495+                          
  3496+                          	DABS	1,19,4	;_randx
  3497+                          	global	_B1
  3498+                          	global	_B1
  3499+ 000000                     _B1  equ     17
  3500+                          
  3501+                          	DABS	1,17,2	;_B1
  3502+                          	global	_G1
  3503+                          	global	_G1
  3504+ 000000                     _G1  equ     15
  3505+                          
  3506+                          	DABS	1,15,2	;_G1
  3507+                          	global	_G2
  3508+                          	global	_G2
  3509+ 000000                     _G2  equ     23
  3510+                          
  3511+                          	DABS	1,23,2	;_G2
  3512+                          	global	_P1in
  3513+                          	global	_P1in
  3514+ 000000                     _P1in  equ     29
  3515+                          
  3516+                          	DABS	1,29,2	;_P1in
  3517+                          	global	_P2in
  3518+                          	global	_P2in
  3519+ 000000                     _P2in  equ     27
  3520+                          
  3521+                          	DABS	1,27,2	;_P2in
  3522+                          	global	_R1
  3523+                          	global	_R1
  3524+ 000000                     _R1  equ     25
  3525+                          
  3526+                          	DABS	1,25,2	;_R1
  3527+                          	global	_R2
  3528+                          	global	_R2
  3529+ 000000                     _R2  equ     13
  3530+                          
  3531+                          	DABS	1,13,2	;_R2
  3532+                          	global	_count
  3533+                          	global	_count
  3534+ 000000                     _count  equ     4
  3535+                          
  3536+                          	DABS	1,4,2	;_count
  3537+                          	global	_count2
  3538+                          	global	_count2
  3539+ 000000                     _count2  equ     2
  3540+                          
  3541+                          	DABS	1,2,2	;_count2
  3542+                          	global	_foul
  3543+                          	global	_foul
  3544+ 000000                     _foul  equ     0
  3545+                          
  3546+                          	DABS	1,0,2	;_foul
  3547+                          	global	_roundNum
  3548+                          	global	_roundNum
  3549+ 000000                     _roundNum  equ     6
  3550+                          
  3551+                          	DABS	1,6,2	;_roundNum
  3552+                          	global	_score1
  3553+                          	global	_score1
  3554+ 000000                     _score1  equ     11
  3555+                          
  3556+                          	DABS	1,11,2	;_score1
  3557+                          	global	_score2
  3558+                          	global	_score2
  3559+ 000000                     _score2  equ     9
  3560+                          
  3561+                          	DABS	1,9,2	;_score2
  3562+                          	global	_randf
  3563+ 000000                     _randf  equ     8
  3564+                          
  3565+                          	DABS	1,8,1	;_randf
  3566+                          	global	_ADRES
  3567+ 000000                     _ADRES	equ	0xFC3
  3568+                          	global	_TMR0
  3569+ 000000                     _TMR0	equ	0xFD6
  3570+                          	global	_ADCON0
  3571+ 000000                     _ADCON0	equ	0xFC2
  3572+                          	global	_ADCON1
  3573+ 000000                     _ADCON1	equ	0xFC1
  3574+                          	global	_ADCON2
  3575+ 000000                     _ADCON2	equ	0xFC0
  3576+                          	global	_PORTC
  3577+ 000000                     _PORTC	equ	0xF82
  3578+                          	global	_PORTD
  3579+ 000000                     _PORTD	equ	0xF83
  3580+                          	global	_T0CON
  3581+ 000000                     _T0CON	equ	0xFD5
  3582                           	global	_TRISA
  3583  000000                     _TRISA	equ	0xF92
  3584                           	global	_TRISB
  3585  000000                     _TRISB	equ	0xF93
  3586                           	global	_TRISC
  3587  000000                     _TRISC	equ	0xF94
  3588                           	global	_TRISD
  3589  000000                     _TRISD	equ	0xF95
  3590                           	global	_TRISE
  3591  000000                     _TRISE	equ	0xF96
  3592                           	global	_GIE
  3593  000000                     _GIE	equ	0x7F97
  3594                           	global	_GODONE
  3595  000000                     _GODONE	equ	0x7E11
  3596                           	global	_PEIE
  3597  000000                     _PEIE	equ	0x7F96
  3598                           	global	_RB0
  3599  000000                     _RB0	equ	0x7C08
  3600                           	global	_RB4
  3601  000000                     _RB4	equ	0x7C0C
  3602                           	global	_RB7
  3603  000000                     _RB7	equ	0x7C0F
  3604                           	global	_RC0
  3605  000000                     _RC0	equ	0x7C10
  3606                           	global	_RC1
  3607  000000                     _RC1	equ	0x7C11
  3608                           	global	_RC2
  3609  000000                     _RC2	equ	0x7C12
  3610                           	global	_RD1
  3611  000000                     _RD1	equ	0x7C19
  3612                           	global	_RD2
  3613  000000                     _RD2	equ	0x7C1A
  3614                           	global	_RD3
  3615  000000                     _RD3	equ	0x7C1B
  3616                           	global	_T0CS
  3617  000000                     _T0CS	equ	0x7EAD
  3618                           	global	_TMR0IE
  3619  000000                     _TMR0IE	equ	0x7F95
  3620                           	global	_TMR0IF
  3621  000000                     _TMR0IF	equ	0x7F92
  3622                           	global	_TMR0IP
  3623  000000                     _TMR0IP	equ	0x7F8A
  3624                           	global	_TMR0ON
  3625  000000                     _TMR0ON	equ	0x7EAF
  3626  001071  00                 	db 0	; dummy byte at the end
  3627                           	psect	intsave_regs,class=BIGRAM,space=1
  3628                           	PSECT	param1,class=BANK1,space=1
  3629                           	GLOBAL	__Lparam1
  3630                           	FNCONF	param1,??,?
  3631                           	GLOBAL	__Labsbss0
  3632  000000                     __Labsbss0	EQU	0
  3633                           	GLOBAL	__Habsbss0
  3634  000000                     __Habsbss0	EQU	31
  3635                           	GLOBAL	__Ldata0
  3636  000000                     __Ldata0	EQU	31
  3637                           	GLOBAL	__Hdata0
  3638  000000                     __Hdata0	EQU	33
  3639                           GLOBAL	__Lparam, __Hparam
  3640                           GLOBAL	__Lparam1, __Hparam1
  3641  000000                     __Lparam	EQU	__Lparam1
  3642  000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Wed Dec 07 21:29:06 2016

                  _B1 000011                    _B2 00001F  
                  _G1 00000F                    _G2 000017  
                  _R1 000019                    _R2 00000D  
         ?_LCD_Strobe 0118                   l120 1DE2  
                 l201 159E                   l122 1F72  
                 l114 1E0A                   l130 1CC8  
                 l202 14CE                   l123 1F5E  
                 l115 1D9E                   l131 1CEA  
                 l211 1F3C                   l203 1510  
                 l124 1F72                   l116 1E0A  
                 l132 1D0C                   l212 1F32  
                 l133 1F04                   l141 1E70  
                 l205 155C                   l126 1FD0  
                 l118 1DEA                   l142 1928  
                 l134 1D8C                   l206 159E  
                 l119 1DC4                   l127 1EC8  
                 l143 1862                   l135 1E7A  
                 l128 1D0C                   l144 18CE  
                 l136 1E50                   l160 1706  
                 l217 1FBC                   l129 1CA8  
                 l137 1E64                   l161 1840  
                 l218 1C88                   l146 18EC  
                 l162 1758                   l170 1136  
                 l219 1C1E                   l147 1928  
                 l139 1E68                   l163 179A  
                 l156 1F9E                   l172 1182  
                 l165 17E6                   l157 1706  
                 l181 130A                   l173 11C4  
                 l166 1828                   l158 1662  
                 l190 15B8                   l182 127E  
                 l159 1706                   l191 159E  
                 l183 132E                   l175 11C6  
                 l192 1346                   l184 12A0  
                 l193 15A6                   l185 12C2  
                 l177 11CE                   l169 10F4  
                 l530 1ABC                   l178 15B8  
                 l194 1472                   l186 12E6  
                 l523 1B6A                   l531 1A52  
                 l195 13A2                   l187 130A  
                 l179 120A                   l532 1A40  
                 l540 1BA0                   l196 13E4  
                 l188 15AA                   l525 1B58  
                 l533 1A5E                   l541 1B8E  
                 l189 1344                   l526 1AE2  
                 l542 1BAC                   l198 1430  
                 l527 1B1E                   l535 1ABC  
                 l199 1472                   l536 1A5E  
                 l544 1BF8                   l529 1AC6  
                 l537 1AA8                   l545 1BAC  
                 l538 1C02                   l546 1BE4  
                 l539 1BF8                   _GIE 007F97  
                 _RB0 007C08                   _RC0 007C10  
                 _RC1 007C11                   _RC2 007C12  
                 _RB4 007C0C                   _RD1 007C19  
                 _RD2 007C1A                   _RD3 007C1B  
                 _RB7 007C0F                   _abs 1F06  
    __end_of_A2D_Read 1E7C       __end_of_LCD_Out 192A  
                ?_abs 0116                  _T0CS 007EAD  
                u3000 1DE2                  u3001 1DE0  
                u3010 1E0A                  u3011 1E08  
                u3020 1AEE                  u3021 1AEC  
                u3030 1B58                  u3031 1B56  
                u3040 1F5C                  u3041 1F5A  
                u3050 1F72                  u3051 1F70  
                u2500 10F2                  u2501 10F0  
                u2510 1136                  u2511 1134  
                u2600 12FE                  u2520 1180  
                u2601 12FC                  u2521 117E  
                u2610 132E                  u2530 11C4  
                u2611 132C                  u2531 11C2  
                u2700 155A                  u2620 1356  
                u2540 11CE                  u2701 1558  
                u2621 1354                  u2541 11CC  
                u2710 159E                  u2630 13A0  
                u2550 1286                  u2711 159C  
                u2631 139E                  u2551 1284  
                u2800 1E4E                  u2720 15A6  
                u2640 13E4                  u2560 12A8  
                u2801 1E4C                  u2721 15A4  
                u2641 13E2                  u2561 12A6  
                u2810 1E64                  u2730 15B8  
                u2650 142E                  u2570 12CE  
                u2811 1E62                  u2731 15B6  
                u2651 142C                  u2571 12CC  
                u2900 1A2E                  u2820 1E70  
                u2740 15CE                  u2660 1472  
                u2580 12DA                  u2901 1A2C  
                u2821 1E6E                  u2741 15CC  
                u2661 1470                  u2581 12D8  
                u2910 1A5E                  u2830 1860  
                u2750 1674                  u2670 1482  
                u2590 12F2                  u2911 1A5C  
                u2831 185E                  u2751 1672  
                u2671 1480                  u2591 12F0  
                u2920 1A8A                  u2840 18CE  
                u2760 1756                  u2680 14CC  
                u2921 1A88                  u2841 18CC  
                u2761 1754                  u2681 14CA  
                u2930 1F12                  u2850 18EA  
                u2770 179A                  u2690 1510  
                _PEIE 007F96                  u2931 1F10  
                u2851 18E8                  u2771 1798  
                u2691 150E                  u2940 1C96  
                u2860 1928                  u2780 17E4  
                u2941 1C94                  u2861 1926  
                u2781 17E2                  u2950 1CB6  
                u2870 1B7C                  u2790 1828  
                u2951 1CB4                  u2871 1B7A  
                u2791 1826                  u2960 1CD8  
                u2880 1BAC                  u2961 1CD6  
                u2881 1BAA                  u2970 1CFA  
                u2890 1BCC                  _MSG0 1001  
                u2971 1CF8                  u2891 1BCA  
                _MSG1 1011                  u2980 1C0C  
                _MSG2 1021                  u2981 1C0A  
                _MSG3 1031                  u2990 1DC2  
                _MSG4 1041                  u2991 1DC0  
                _MSG5 1051                  _MSG6 1061  
                _P1in 00001D                  _P2in 00001B  
                _TMR0 000FD6                  abs@a 0116  
                _main 1074                  _foul 000000  
                _rand 1C04                  fsr0h 000FEA  
                fsr1h 000FE2                  indf0 000FEF  
                fsr0l 000FE9                  fsr2h 000FDA  
                fsr1l 000FE1                  fsr2l 000FD9  
                pclat 000FFA                  prodh 000FF4  
                prodl 000FF3                  start 0818  
         LCD_Out@DATA 010E           LCD_Move@Col 0115  
         LCD_Move@Row 0114                 ??_abs 0118  
    __end_of_LCD_Init 1D8E      __end_of_LCD_Inst 1ECA  
    __end_of_LCD_Move 1D0E       __end_of_Wait_ms 1E0C  
               ?_main 0100                 ?_rand 0114  
               _ADRES 000FC3                 _T0CON 000FD5  
     __end_of___lwdiv 1AC8       __end_of___lwmod 1C04  
               i2l150 19DA                 i2l151 1998  
               i2l152 1998                 i2l153 19AC  
               i2l154 19C0                 i2l155 19D4  
               i2l149 19DA                 _PORTC 000F82  
               _PORTD 000F83                 _TRISA 000F92  
               _TRISB 000F93                 _TRISC 000F94  
               _TRISD 000F95                 _TRISE 000F96  
 ___lmul@multiplicand 011A                 _Score 15BE  
           A2D_Read@c 010E             A2D_Read@i 0110  
               _Start 1708                 _count 000004  
               _randf 000008                 _randx 000013  
               _srand 1FA0                 main@i 0100  
               tablat 000FF5                 status 000FD8  
       ??_RandomColor 0114          __end_of_main 15BE  
        __end_of_rand 1C8A      __end_of_IntServe 1A10  
              ??_main 0100                ??_rand 0116  
       __activetblptr 000003     __end_of_LCD_Pause 1F74  
           ??_LCD_Out 0110     __end_of_LCD_Write 1F06  
              ?_Score 010E                ?_Start 010E  
              _ADCON0 000FC2                _ADCON1 000FC1  
              _ADCON2 000FC0                ?_srand 0116  
              _GODONE 007E11                i2u3100 19BE  
              i2u3101 19BC                i2u3110 19D2  
              i2u3111 19D0                i2u3105 19B6  
              i2u3115 19CA                i2u3060 195C  
              i2u3061 195A                i2u3070 1970  
              i2u3071 196E                i2u3080 1990  
              i2u3081 198E                i2u3090 19AA  
              i2u3091 19A8                i2u3095 19A2  
              _TMR0IE 007F95                _TMR0IF 007F92  
              _TMR0IP 007F8A                _TMR0ON 007EAF  
              __Ldata 00001F             ??_Wait_ms 011A  
              Start@i 010E                ___lmul 1AC8  
 __end_of_RandomColor 1FA0             ??___lwdiv 011A  
           ??___lwmod 011A             ?_A2D_Read 010E  
              _count2 000002                _score1 00000B  
              _score2 000009          __mediumconst 1072  
              tblptrh 000FF7                tblptrl 000FF6  
              tblptru 000FF8                srand@x 0116  
          Start@i_106 0110            __accesstop 0080  
           ?_LCD_Init 010E             ?_LCD_Inst 0116  
           ?_LCD_Move 0114             LCD_Inst@c 0116  
       __end_of_Score 1708         __end_of_Start 1842  
          ??_A2D_Read 0110         __end_of_srand 1FBE  
        ??_LCD_Strobe 0118               ??_Score 0110  
             ??_Start 010E               ??_srand 0118  
           ?_IntServe 0122            ??_LCD_Init 010E  
          ??_LCD_Inst 0117            ??_LCD_Move 0116  
  __end_of_LCD_Strobe 1FD2           _RandomColor 1F74  
             ?___lmul 0116        ___lmul@product 011E  
             _LCD_Out 1842            ??_IntServe 0122  
             __Hdata0 000021               __Ldata0 00001F  
             __Hparam 012F               __Lparam 0100  
             _Wait_ms 1D8E               ___lwdiv 1A10  
             ___lwmod 1B6C               __ramtop 1000  
           _LCD_Pause 1F3E             _LCD_Write 1ECA  
       __Lmediumconst 1072               int_func 0808  
   Score@playerSelect 010E            ?_LCD_Pause 0118  
          ?_LCD_Write 0116            LCD_Pause@x 0118  
      __end_of___lmul 1B6C            LCD_Write@c 0116  
         __end_of_abs 1F3E             __Habsbss0 00001F  
           __Labsbss0 000000          ?_RandomColor 0114  
            ??___lmul 011E              ?_LCD_Out 010E  
            LCD_Out@A 0111              LCD_Out@i 0110  
         ??_LCD_Pause 0118           ??_LCD_Write 0117  
    ___lwdiv@dividend 0116              ?_Wait_ms 0118  
            ?___lwdiv 0116              ?___lwmod 0116  
            _A2D_Read 1E0C           __smallconst 1000  
    ___lwdiv@quotient 011B              _LCD_Init 1D0E  
            _LCD_Inst 1E7C              _LCD_Move 1C8A  
           main@i_110 0104             main@i_111 0106  
           main@i_112 0108             main@i_113 010A  
           main@i_109 0102     ___lmul@multiplier 0116  
            _IntServe 192A              __Hparam1 012F  
            __Lparam1 0100              Wait_ms@X 0118  
            Wait_ms@i 011A              Wait_ms@j 011C  
        __Lsmallconst 1000       ___lwdiv@divisor 0118  
     ___lwdiv@counter 011A              _roundNum 000006  
          _LCD_Strobe 1FBE              intlevel2 1FD2  
    ___lwmod@dividend 0116       ___lwmod@divisor 0118  
     ___lwmod@counter 011A  
